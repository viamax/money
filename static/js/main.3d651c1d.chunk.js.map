{"version":3,"sources":["model/transaction.ts","components/Firebase/firebase.ts","components/Firebase/context.tsx","components/Firebase/index.ts","components/pages/signOut/signOutButton.tsx","constants/routes.ts","components/Session/context.ts","components/Session/withAuthentication.tsx","components/pages/navigation/navigation.tsx","components/pages/signin/signInPage.tsx","components/pages/signup/signUpPage.tsx","util/excelUtil.ts","util/Icons.ts","util/transactionHelper.tsx","components/common/transactionRow.ts","util/MoneyUtil.ts","components/section/sectionTitle.tsx","components/common/shekelSymbol.tsx","components/transaction/transactionComponent.tsx","components/transaction/transactionCategory.tsx","components/section/sectionComponent.tsx","components/cashFlow/cashFlow.tsx","components/pages/bankAccount/bankAccountTimeline.tsx","components/toolbars/mainToolbar.tsx","components/pages/homePage/homePage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["SortType","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","auth","doCreateUserWithEmailAndPassword","email","password","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","app","initializeApp","this","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","history","Button","color","onClick","event","push","AuthUserContext","withAuthentication","WithAuthentication","listener","state","authUser","onAuthStateChanged","setState","Provider","value","NavigationView","styled","flexGrow","MenuArea","display","alignItems","MenuButton","StyledToolbar","Toolbar","justifyContent","NavigationAuth","to","NavigationNonAuth","Navigation","AppBar","position","style","backgroundColor","IconButton","edge","aria-label","Typography","variant","SignInPageView","SignInPage","SignInForm","compose","withRouter","useState","setEmail","setPassword","error","setError","isInvalid","onSubmit","preventDefault","then","catch","name","onChange","target","type","placeholder","disabled","message","SignUpPageView","SignUpPage","SignUpForm","username","setUsername","passwordOne","setPasswordOne","passwordTwo","setPasswordTwo","ExcelUtil","ws","callback","vm","files","length","Error","reader","FileReader","onload","e","bstr","result","wb","XLSX","cellDates","wsname","SheetNames","Sheets","handleLeumiData","readAsBinaryString","sheet","row","rowNum","colNum","range","decode_range","s","r","c","nextCell","encode_cell","v","w","transactions","data","sheet2arr","i","date","split","transactionDate","Date","parseInt","transactionName","transactionId","transactionDebit","undefined","replace","transactionCredit","transactionBalance","id","debit","credit","balance","subTransactions","moneyIcons","iconCode","iconName","TransactionHelper","indexOf","month","filter","t","getMonth","transactionsOfMonth","getTransactionOfMonth","_","sum","map","transaction","ExpandSection","monthNames","RowContainer","fontSize","fontWeight","borderRadius","borderTop","borderLeft","fontFamily","flexDirection","TransactionRow","OutlinedInput","borderColor","paddingRight","width","TitleWidth","ValueInput","flex","LabelInput","MoneyUtil","x","console","log","toString","SectionTitleView","Paper","height","marginBottom","SectionTitle","dir","title","textAlign","startAdornment","opacity","endAdornment","expandable","expanded","categories","onExpand","aria-describedby","inputProps","labelWidth","months","numberWithCommas","isBalance","getMonthBalance","sumTransactions","InputAdornment","disableTypography","minWidth","marginRight","marginLeft","ShekelSymbolView","ShekelSymbol","TransactionView","TransactionLabelInput","TransactionComponent","setTransactionName","transactionValue","setTransactionValue","useEffect","total","handleFocus","select","showLabel","className","getIcon","readOnly","onFocus","showValue","contentEditable","parseFloat","TransactionCategoryView","ChildrenContainer","TransactionCategoryComponent","setExpanded","setTotal","setFolderName","uniqueTransactions","setUniqueTransactions","uniq","unique","index","uniquePerMonth","SectionComponentView","SectionComponent","setTransactions","DESC","currentSort","setCurrentSort","orderBy","ASC","slice","setSortType","sortType","primaryColor","category","categoryTransactions","getType","secondaryColor","CashFlowView","MonthTitle","MonthName","SingleMonthTitle","MonthsContainers","CashFlow","Timeline","marginTop","BankAccountTimeline","setCategories","monthTimeframe","setMonthsTimeframe","startMonth","timeframe","handleResult","resp","cats","accept","multiple","readFile","htmlFor","component","MainToolbarView","borderBottom","AccountLogo","AccountNameContainer","AccountName","RightSection","LeftSection","MainToolbar","setTimeframe","onChangeStartMonth","Select","labelId","onChangeTimeframe","label","MenuItem","HomePageView","HomePage","setStartMonth","historyGlobal","createBrowserHistory","forceRefresh","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d651c1d.chunk.js","sourcesContent":["export interface Transaction {\n    name: string;\n    date?: Date;\n    id?: string;\n    debit?: string;\n    credit?: string;\n    balance?: string;\n    value: number;\n    type: \"paycheck\" | \"income\";\n    subTransactions: Transaction[];\n}\n\nexport class TransactionOld {\n    constructor() {\n        this.TransactionName =\"\";\n        this.TransactionDate= \"\";\n        this.AccountBalance = \"\";\n        this.TransactionId = \"\";\n        this.TransactionCredit = \"\";\n        this.TransactionDebit = \"\";\n    }\n    public TransactionName : string;\n    public TransactionDate : string;\n    public TransactionId : string;\n    public TransactionDebit : string;\n    public TransactionCredit : string;\n    public AccountBalance : string;\n}\n\nexport enum SortType {\n ASC,\n    DESC,\n}","import app from 'firebase/app';\nimport 'firebase/auth';\n\n\nconst config = {\n    apiKey: \"AIzaSyDzcylgM2E7bcI910x1Hu09aIWFvvIq0kU\",\n    authDomain: \"moneyxxx.firebaseapp.com\",\n    databaseURL: \"https://moneyxxx.firebaseio.com\",\n    projectId: \"moneyxxx\",\n    storageBucket: \"moneyxxx.appspot.com\",\n    messagingSenderId: \"701739152964\",\n    appId: \"1:701739152964:web:2f0bd6a5d542d85c1fee11\",\n    measurementId: \"G-R28P30NQSN\"\n}\n\n\n/*const config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};*/\n\nclass Firebase {\n    private auth;\n    constructor() {\n        app.initializeApp(config);\n        this.auth = app.auth();\n    }\n\n    // *** Auth API ***\n\n    doCreateUserWithEmailAndPassword = (email, password) =>\n        this.auth.createUserWithEmailAndPassword(email, password);\n\n    doSignInWithEmailAndPassword = (email, password) =>\n        this.auth.signInWithEmailAndPassword(email, password);\n\n    doSignOut = () => this.auth.signOut();\n\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n    doPasswordUpdate = password =>\n        this.auth.currentUser.updatePassword(password);\n\n\n}\n\nexport default Firebase;","import React, {Component} from 'react';\nimport Firebase from \"./firebase\";\n\nconst FirebaseContext = React.createContext<any|null>(null);\n\nexport const withFirebase = Component => (props: any) => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n)\n\nexport default FirebaseContext;","import Firebase from './firebase';\nimport FirebaseContext, { withFirebase } from './context';\n\nexport default Firebase;\n\n\nexport { FirebaseContext, withFirebase };","import React from 'react';\n\nimport { withFirebase } from '../../Firebase';\nimport Button from \"@material-ui/core/Button\";\nimport * as ROUTES from \"../../../constants/routes\";\n\nconst SignOutButton = ({ firebase, history }) => {\n\n    const signOut = (event) => {\n        firebase.doSignOut(event);\n        history.push(ROUTES.SIGN_IN);\n    }\n\n    return <Button color=\"inherit\" onClick={signOut}>\n        Sign Out\n    </Button>\n};\n\nexport default withFirebase(SignOutButton);","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n    class WithAuthentication extends React.Component {\n\n        private listener;\n\n\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                authUser: null,\n            };\n        }\n\n        componentDidMount() {\n            this.listener = (this.props as any).firebase.auth.onAuthStateChanged(\n                authUser => {\n                    authUser\n                        ? this.setState({ authUser })\n                        : this.setState({ authUser: null });\n                },\n            );\n        }\n\n        componentWillUnmount() {\n            this.listener();\n        }\n\n        render() {\n            return (\n                <AuthUserContext.Provider value={(this.state as any).authUser}>\n                    <Component {...this.props} />\n                </AuthUserContext.Provider>\n            );\n        }\n    }\n\n    return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as ROUTES from \"../../../constants/routes\";\nimport SignOutButton from \"../signOut/signOutButton\";\nimport { SignUpFormPageProps } from \"../signup/signUpPage\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport { AppBar } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { AuthUserContext } from \"../../Session\";\n\n//region [[ Styles ]]\n\nconst NavigationView = styled((props) => <div {...props} />)({\n  flexGrow: 1,\n  color: \"blue\",\n});\n\nconst MenuArea = styled((props) => <div {...props} />)({\n  display: \"flex\",\n  alignItems: \"center\",\n});\n\nconst MenuButton = styled(Button)({\n  color: \"white\",\n});\n\nconst StyledToolbar = styled(Toolbar)({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n});\n\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface NavigationProps {\n  history: any;\n}\n\nexport interface NavigationAuthProps {\n  email: any;\n  history: any;\n}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\nconst Navigation = ({ ...props }: NavigationProps) => {\n  return (\n    <NavigationView>\n      <AppBar\n        position=\"static\"\n        style={{ backgroundColor: \"white\", color: \"black\", display: \"none\" }}\n      >\n        <StyledToolbar>\n          <MenuArea>\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\">Money</Typography>\n          </MenuArea>\n\n          <div>\n            <AuthUserContext.Consumer>\n              {(authUser: any) =>\n                authUser ? (\n                  <NavigationAuth\n                    email={authUser.email}\n                    history={props.history}\n                  />\n                ) : (\n                  <NavigationNonAuth />\n                )\n              }\n            </AuthUserContext.Consumer>\n          </div>\n        </StyledToolbar>\n      </AppBar>\n    </NavigationView>\n  );\n};\n\nconst NavigationAuth = ({ ...props }: NavigationAuthProps) => {\n  return (\n    <>\n      <span>Welcome {props.email}</span>\n      <MenuButton color=\"inherit\">\n        <Link to={ROUTES.LANDING}>Landing</Link>\n      </MenuButton>\n\n      <MenuButton>\n        <Link color={\"white\"} to={ROUTES.HOME}>\n          Home\n        </Link>\n      </MenuButton>\n\n      <MenuButton>\n        <Link to={ROUTES.ACCOUNT}>Account</Link>\n      </MenuButton>\n\n      <SignOutButton history={props.history} />\n    </>\n  );\n};\n\nconst NavigationNonAuth = () => {\n  return (\n    <>\n      <Button color=\"inherit\">\n        <Link to={ROUTES.LANDING}>Landing</Link>\n      </Button>\n\n      <Button color=\"inherit\">\n        <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n      </Button>\n    </>\n  );\n};\n\nexport default Navigation;\n","import React, {Component, useState} from 'react';\nimport { compose } from 'recompose';\nimport * as ROUTES from '../../../constants/routes';\nimport styled from \"@material-ui/core/styles/styled\";\nimport { FirebaseContext } from '../../Firebase';\nimport { withFirebase } from '../../Firebase';\nimport { Link, withRouter } from 'react-router-dom';\n\n\n//region [[ Styles ]]\n\nconst SignInPageView = styled((props) => <div {...props} />)({\n\n});\n\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface SignInPageProps {\n}\n\nexport interface SignInFormPageProps {\n  firebase: any;\n  history:any;\n}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\n\nexport const SignInPage = ({ ...props }: SignInPageProps) => {\n  return <SignInPageView>\n    <div>\n      <h1>SignIn</h1>\n      <FirebaseContext.Consumer>\n        {firebase => <SignInForm firebase={firebase} />}\n      </FirebaseContext.Consumer>\n    </div>\n  </SignInPageView>;\n}\n\n\n\n\n\nconst SignInFormBase = ({ ...props }: SignInFormPageProps) => {\n\n  const [email, setEmail] = useState('viamax@gmail.com');\n  const [password, setPassword] = useState('12345');\n  const [error, setError] = useState<any>(null);\n\n  const isInvalid = password === '' || email === '';\n\n  const onSubmit = event => {\n    event.preventDefault();\n    props.firebase\n        .doSignInWithEmailAndPassword(email, password)\n        .then(() => {\n          setEmail(\"\");\n          setPassword(\"\");\n          props.history.push(ROUTES.HOME);\n        })\n        .catch(error => {\n          setError(error);\n        });\n\n\n  };\n\n  const onChangePassword = event => {\n    setPassword(event.target.value);\n  };\n\n  const onChangeEmail = event => {\n    setEmail(event.target.value);\n  };\n\n  return (\n      <form onSubmit={onSubmit}>\n        <input\n            name=\"email\"\n            value={email}\n            onChange={onChangeEmail}\n            type=\"text\"\n            placeholder=\"Email Address\"\n        />\n        <br/>\n        <input\n            name=\"password\"\n            value={password}\n            onChange={onChangePassword}\n            type=\"password\"\n            placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n\n        {error &&\n        <p>{error ? error.message : \"\"}</p>\n        }\n      </form>\n  );\n\n}\n\nconst SignInLink = () => (\n    <p>\n      Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n    </p>\n);\n\nexport default SignInPage;\n\nconst SignInForm = compose(\n    withRouter,\n    withFirebase,\n)(SignInFormBase);\n\nexport { SignInForm, SignInLink };","import React, {Component, useState} from 'react';\nimport { compose } from 'recompose';\nimport * as ROUTES from '../../../constants/routes';\nimport styled from \"@material-ui/core/styles/styled\";\nimport { FirebaseContext } from '../../Firebase';\nimport { withFirebase } from '../../Firebase';\nimport { Link, withRouter } from 'react-router-dom';\n\n\n//region [[ Styles ]]\n\nconst SignUpPageView = styled((props) => <div {...props} />)({\n\n});\n\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface SignUpPageProps {\n}\n\nexport interface SignUpFormPageProps {\n    firebase: any;\n    history:any;\n}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\n\nexport const SignUpPage = ({ ...props }: SignUpPageProps) => {\n    return <SignUpPageView>\n        <div>\n            <h1>SignUp</h1>\n            <FirebaseContext.Consumer>\n                {firebase => <SignUpForm firebase={firebase} />}\n            </FirebaseContext.Consumer>\n        </div>\n    </SignUpPageView>;\n}\n\n\n\n\n\nconst SignUpFormBase = ({ ...props }: SignUpFormPageProps) => {\n\n    const [username, setUsername] = useState('max');\n    const [email, setEmail] = useState('viamax@gmail.com');\n    const [passwordOne, setPasswordOne] = useState('1234');\n    const [passwordTwo, setPasswordTwo] = useState('1234');\n    const [error, setError] = useState<any>(null);\n\n    const isInvalid =\n        passwordOne !== passwordTwo ||\n        passwordOne === '' ||\n        email === '' ||\n        username === '';\n\n    const onSubmit = event => {\n        event.preventDefault();\n        props.firebase\n            .doCreateUserWithEmailAndPassword(email, passwordOne)\n            .then(authUser => {\n                setUsername('');\n                setEmail('');\n                setPasswordOne('');\n                setPasswordTwo('');\n                props.history.push(ROUTES.HOME);\n            })\n            .catch(error => {\n                setError(error );\n            });\n\n\n\n    }\n\n    const onChangeUsername = event => {\n        setUsername(event.target.value);\n    };\n\n    const onChangeEmail = event => {\n        setEmail(event.target.value);\n    };\n\n    const onChangePasswordOne = event => {\n        setPasswordOne(event.target.value);\n    };\n\n    const onChangePasswordTwo = event => {\n        setPasswordTwo(event.target.value);\n    };\n\n    return (\n        <form onSubmit={onSubmit}>\n            <input\n                name=\"username\"\n                value={username}\n                onChange={onChangeUsername}\n                type=\"text\"\n                placeholder=\"Full Name\"\n            />\n            <br/>\n            <input\n                name=\"email\"\n                value={email}\n                onChange={onChangeEmail}\n                type=\"text\"\n                placeholder=\"Email Address\"\n            />\n            <br/>\n            <input\n                name=\"passwordOne\"\n                value={passwordOne}\n                onChange={onChangePasswordOne}\n                type=\"password\"\n                placeholder=\"Password\"\n            />\n            <br/>\n            <input\n                name=\"passwordTwo\"\n                value={passwordTwo}\n                onChange={onChangePasswordTwo}\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n            />\n            <br/>\n            <button disabled={isInvalid} type=\"submit\">\n                Sign Up\n            </button>\n\n            {error &&\n                <p>{error ? error.message : \"\"}</p>\n            }\n        </form>\n    );\n\n}\n\nconst SignUpLink = () => (\n    <p>\n        Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n    </p>\n);\n\nexport default SignUpPage;\n\n\nconst SignUpForm = compose(\n    withRouter,\n    withFirebase,\n)(SignUpFormBase);\n\nexport { SignUpForm, SignUpLink };","\nimport * as XLSX from 'xlsx';\nimport {Transaction, TransactionOld} from '../model/transaction';\n\nexport class ExcelUtil {\n    static readFile(event: any, callback: Function ){\n\n        let vm = this;\n\n        /* wire up file reader */\n        const target: DataTransfer = <DataTransfer>(event.target);\n        if (target.files.length !== 1) throw new Error('Cannot use multiple files');\n        const reader: FileReader = new FileReader();\n        reader.onload = (e: any) => {\n            /* read workbook */\n            const bstr: string = e.target.result;\n            const wb: XLSX.WorkBook = XLSX.read(bstr, {type: 'binary',cellDates: true});\n\n            /* grab first sheet */\n            const wsname: string = wb.SheetNames[0];\n            const ws: XLSX.WorkSheet = wb.Sheets[wsname];\n\n            vm.handleLeumiData(ws, callback);\n\n            /* save data */\n            //this.data = <AOA>(XLSX.utils.sheet_to_json(ws, {header: 1}));\n        };\n\n\n        reader.readAsBinaryString(target.files[0]);\n\n\n    }\n\n    static sheet2arr(sheet){\n        let result: any = [];\n        let row;\n        let rowNum;\n        let colNum;\n        let range = XLSX.utils.decode_range(sheet['!ref']);\n        for(rowNum = range.s.r; rowNum <= range.e.r; rowNum++){\n            row = [];\n            for(colNum=range.s.c; colNum<=range.e.c; colNum++){\n                let nextCell = sheet[\n                    XLSX.utils.encode_cell({r: rowNum, c: colNum})\n                    ];\n                if( typeof nextCell === 'undefined' ){\n                    row.push(void 0);\n                } else {\n\n                    if (nextCell != null && nextCell.v != null && nextCell.w == null) {\n                        row.push(nextCell.v);\n                    }\n                    else {\n                        row.push(nextCell.w);\n                    }\n\n\n\n                }\n            }\n            result.push(row);\n        }\n        return result;\n    };\n\n\n    static handleLeumiData(ws: XLSX.WorkSheet, callback) {\n\n        let transactions = [];\n\n        let data = this.sheet2arr(ws);\n\n        if (data != null && data.length > 0) {\n\n            for(let i = 22; i < data.length; i++) {\n\n\n                const date = data[i][0] ? data[i][0].split(\"/\") : null;\n\n                const transactionDate = date ? new Date(parseInt(\"20\"+date[2]), date[1]-1, date[0]) : null;\n\n\n\n                const transactionName =  data[i][1];\n                const transactionId = data[i][2];\n                const transactionDebit = data[i][3] == undefined ? undefined : data[i][3].replace(',', '');\n                const transactionCredit  = data[i][4] == undefined ? undefined : data[i][4].replace(',', '');\n                const transactionBalance =  data[i][5];\n                //newTransaction.AccountBalance = data[i][6].replace(',', '');\n                (transactions as any).push({\n                    name: transactionName,\n                    date: transactionDate,\n                    id: transactionId,\n                    debit: transactionDebit,\n                    credit: transactionCredit,\n                    balance: transactionBalance,\n                    value: transactionDebit | transactionCredit,\n                    type: \"paycheck\",\n                    subTransactions: []\n                });\n            }\n        }\n\n        callback(transactions);\n    }\n\n    handleHapoalimData(ws: XLSX.WorkSheet):Transaction[] {\n\n        return [];\n    }\n\n}\n","export const DEFAULT_ICON = \"default\";\nexport const moneyIcons = {\n    \"הלוואות\": {\n        iconCode: '\"\\f492\"',\n        iconName: \"fas fa-dollar-sign\",\n    },\n    \"העברות\": {\n        iconCode: '\"\\f492\"',\n        iconName: \"fas fa-angle-double-left\",\n    },\n    \"מזומן\": {\n        iconCode: '\"\\f481\"',\n        iconName: \"far fa-money-bill-alt\",\n    },\n    \"כרטיסי אשראי\": {\n        iconCode: '\"\\f21e\"',\n        iconName: \"far fa-credit-card\",\n    },\n    \"עמלות\": {\n        iconCode: '\"\\f21e\"',\n        iconName: \"fas fa-dollar-sign\",\n    },\n    \"אחר\": {\n        iconCode: '\"\\f481\"',\n        iconName: \"far fa-question-circle\",\n    },\n};\n","\nimport * as XLSX from 'xlsx';\nimport _ from \"lodash\";\nimport {Transaction, TransactionOld} from '../model/transaction';\nimport React from \"react\";\nimport {moneyIcons} from \"./Icons\";\n\nexport class TransactionHelper {\n    public static getType(transactionName: string) {\n        if ((transactionName === \"מב. הפועלים-י\") ||\n           (transactionName === \"   \") ||\n           (transactionName === \"   \")) {\n            return \"העברות\";\n        }\n\n        if ((transactionName === \"הע. אינטרנט700\") ||\n            (transactionName === \"העברה עצמית700\") ||\n            (transactionName === \"   \")) {\n            return \"העברות\";\n        }\n\n        if ((transactionName && transactionName.indexOf(\"כספומט\") !== -1 ||\n            (transactionName && transactionName.indexOf(\"בנקט\") !== -1))) {\n            return \"מזומן\";\n        }\n\n        if (transactionName === \"פרעון הלוואה\") {\n            return \"הלוואות\";\n        }\n\n        if ((transactionName === \"לאומי ויזה י\") ||\n            (transactionName === \"ל.מסטרקארדי\") ||\n            (transactionName === \"   \")) {\n            return \"כרטיסי אשראי\";\n        }\n\n        if ((transactionName && transactionName.indexOf(\"עמל.ערוץ\") != -1) ||\n            (transactionName === \"מסלול בסיסי\")) {\n            return \"עמלות\";\n        }\n\n        return \"אחר\";\n    }\n\n    public static getTransactionOfMonth( transactions: Transaction[], month: number ) {\n        return transactions.filter(t=>{\n            return (t.date!.getMonth() === month);\n        })\n    }\n\n    public static getMonthBalance(transactions: Transaction[], month: number ) {\n\n\n        const transactionsOfMonth = TransactionHelper.getTransactionOfMonth(transactions, month);\n\n        if (transactionsOfMonth.length > 0) {\n            return transactionsOfMonth[transactionsOfMonth.length-1].balance;\n        }\n        else {\n            return null;\n        }\n\n\n    }\n\n    public static sumTransactions(transactions: Transaction[]) {\n\n        return _.sum(transactions.map(transaction=>{\n            if (transaction.debit) {\n                return parseInt(transaction.debit!);\n            }\n            else {\n                return parseInt(transaction.credit!);\n            }\n        }));\n    }\n\n    public static getIcon(type: string):{iconName: string} {\n        return moneyIcons[type];\n    }\n}\n","import styled from \"@material-ui/core/styles/styled\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput/OutlinedInput\";\nimport {Title} from \"@material-ui/icons\";\n\n\nexport const ExpandSection = styled(\"div\")({\n    /*top: \"10px\",\n    right: \"-45px\",\n    position: \"absolute\",*/\n});\n\nexport const monthNames = [\"ינואר\", \"פברואר\", \"מרץ\", \"אפריל\", \"מאי\", \"יוני\",\n    \"יולי\", \"אוגוסט\", \"ספטמבר\", \"אוקטובר\", \"נובמבר\", \"דצמבר\"\n];\n\nexport const TitleWidth = 250;\nexport const TransactionWidth = 200;\n\nexport const RowContainer = styled(\"div\")({\n    fontSize: \"18px\",\n    fontWeight: 400,\n    borderRadius: 0,\n    borderTop: \"1px solid white\",\n    borderLeft: \"1px solid white\",\n    fontFamily: \"'Assistant', sans-serif\",\n\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n    position: \"relative\",\n});\n\nexport const CommonInputProps = {\n    \"aria-label\": \"weight\",\n    style: {\n    textAlign: \"right\",\n        width: \"240px\",\n        fontFamily: \"'Varela Round', sans-serif\",\n        fontSize: \"20px\",\n        fontWeight: 400,\n    },\n};\n\nexport const TransactionRow = styled(OutlinedInput)( {\n    '&:hover':{\n        '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: \"blue !important;\",\n            borderRadius: \"0px\",\n\n        },\n\n    },\n\n    '& .MuiOutlinedInput-notchedOutline': {\n        borderColor: \"transparent !important;\",\n        borderRadius: \"0px\",\n        '&:hover':{\n            backgroundColor:\"blue !important;\",\n        },\n    },\n\n    '& .MuiOutlinedInput-adornedEnd': {\n        paddingRight: \"0px !important\"\n    },\n\n\n    width: TitleWidth+\"px\"\n});\n\n\nexport const ValueInput = styled(TransactionRow)({\n    flex:1,\n    width:\"auto\"\n});\n\nexport const LabelInput = styled(TransactionRow)({});","\nimport * as XLSX from 'xlsx';\nimport {Transaction, TransactionOld} from '../model/transaction';\n\nexport class MoneyUtil {\n    static numberWithCommas(x) {\nconsole.log(\"max\");\n        return x ? x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"\";\n    }\n}\n","import * as React from \"react\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { SortType, Transaction } from \"../../model/transaction\";\nimport {\n  ExpandSection,\n  LabelInput,\n  ValueInput,\n} from \"../common/transactionRow\";\nimport WorkIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { TransactionHelper } from \"../../util/transactionHelper\";\n\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport { MoneyUtil } from \"../../util/MoneyUtil\";\n\n//region [[ Styles ]]\n\nconst SectionTitleView = styled(Paper)({\n  fontSize: \"20px\",\n  fontWeight: 400,\n\n  borderRadius: 0,\n  borderTop: \"1px solid white\",\n  height: \"60px\",\n  alignItems: \"center\",\n  display: \"flex\",\n  position: \"relative\",\n  marginBottom: \"15px\",\n  flexDirection: \"row-reverse\",\n});\n\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface SectionTitleProps {\n  title: string;\n  currentSort: SortType;\n  setSortType: (sort: SortType) => void;\n  transactions: Transaction[];\n  total: number;\n  months: number[];\n  color: string;\n  expandable?: boolean;\n  onExpand: () => void;\n  expanded: boolean;\n  categories: string[];\n  isBalance?: boolean;\n}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\nexport const SectionTitle = ({ ...props }: SectionTitleProps) => {\n  const sort = () => {\n    if (props.currentSort === SortType.ASC) {\n      props.setSortType(SortType.DESC);\n    } else {\n      props.setSortType(SortType.ASC);\n    }\n  };\n\n  return (\n    <SectionTitleView>\n      <LabelInput\n        dir=\"rtl\"\n        id=\"outlined-adornment-weight\"\n        value={props.title}\n        style={{\n          textAlign: \"right\",\n          backgroundColor: props.color,\n          borderRadius: 0,\n          borderLeft: \"1px solid white\",\n          color: \"white\",\n        }}\n        startAdornment={\n          <IconButton style={{ opacity: 0 }}>\n            <WorkIcon />\n          </IconButton>\n        }\n        endAdornment={\n          props.expandable !== false ? (\n            <ExpandSection>\n              {!props.expanded ? (\n                <IconButton\n                  disabled={props.categories.length === 0}\n                  style={{\n                    opacity: 1,\n                  }}\n                  onClick={() => {\n                    props.onExpand();\n                  }}\n                >\n                  <ExpandMoreIcon />\n                </IconButton>\n              ) : (\n                <IconButton\n                  disabled={props.categories.length === 0}\n                  style={{\n                    opacity: 1,\n                  }}\n                  onClick={() => {\n                    props.onExpand();\n                  }}\n                >\n                  <ExpandLessIcon />\n                </IconButton>\n              )}\n            </ExpandSection>\n          ) : (\n            <span></span>\n          )\n        }\n        aria-describedby=\"outlined-weight-helper-text\"\n        inputProps={{\n          \"aria-label\": \"weight\",\n          style: {\n            textAlign: \"right\",\n            width: \"240px\",\n            fontFamily: \"'Varela Round', sans-serif\",\n            fontSize: \"20px\",\n            color: \"white\",\n            fontWeight: 400,\n          },\n        }}\n        labelWidth={0}\n      />\n\n      {props.months.map((month) => (\n        <ValueInput\n          dir=\"rtl\"\n          id=\"outlined-adornment-weight\"\n          value={MoneyUtil.numberWithCommas(\n            !props.isBalance\n              ? TransactionHelper.sumTransactions(\n                  TransactionHelper.getTransactionOfMonth(\n                    props.transactions,\n                    month\n                  )\n                )\n              : TransactionHelper.getMonthBalance(props.transactions, month)\n          )}\n          style={{\n            backgroundColor: props.color,\n            borderRadius: 0,\n            borderLeft: \"1px solid white\",\n            color: \"white\",\n          }}\n          startAdornment={\n            <InputAdornment\n              disableTypography={true}\n              style={{\n                fontSize: \"20px\",\n                fontWeight: 400,\n                minWidth: \"20px\",\n                marginRight: \"12px\",\n                marginLeft: \"0\",\n                opacity: 0.5,\n              }}\n              position=\"end\"\n            >\n              ₪\n            </InputAdornment>\n          }\n          aria-describedby=\"outlined-weight-helper-text\"\n          inputProps={{\n            \"aria-label\": \"weight\",\n            style: {\n              textAlign: \"right\",\n\n              fontFamily: \"'Varela Round', sans-serif\",\n              fontSize: \"20px\",\n              fontWeight: 600,\n            },\n          }}\n          labelWidth={0}\n        />\n      ))}\n    </SectionTitleView>\n  );\n};\n","import * as React from \"react\";\nimport { withStyles } from \"@material-ui/core\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\n//region [[ Styles ]]\n\nconst ShekelSymbolView = styled(\"div\")({});\n\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface ShekelSymbolProps {\n  value: number;\n}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\nexport const ShekelSymbol = ({ ...props }: ShekelSymbolProps) => {\n  return (\n    <ShekelSymbolView>\n      <InputAdornment\n        disableTypography={true}\n        style={{\n          fontSize: \"20px\",\n          fontWeight: 400,\n          minWidth: \"20px\",\n          marginRight: \"12px\",\n          marginLeft: \"0\",\n          opacity: props.value === 0 ? 0 : 0.5,\n        }}\n        position=\"end\"\n      >\n        ₪\n      </InputAdornment>\n    </ShekelSymbolView>\n  );\n};\n","import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Transaction } from \"../../model/transaction\";\nimport { LabelInput, RowContainer, ValueInput } from \"../common/transactionRow\";\nimport { TransactionHelper } from \"../../util/transactionHelper\";\nimport { ShekelSymbol } from \"../common/shekelSymbol\";\nimport { MoneyUtil } from \"../../util/MoneyUtil\";\nimport _ from \"lodash\";\n\n//region [[ Styles ]]\n\nconst TransactionView = styled(Paper)({\n  display: \"flex\",\n  flex: 1,\n  flexDirection: \"column\",\n});\n\nconst ShekelAdornment = styled(InputAdornment)({\n  display: \"flex\",\n  flexDirection: \"column\",\n});\n\nconst TransactionLabelInput = styled(LabelInput)({});\n\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface TransactionProps {\n  transactions: Transaction[];\n  total?: boolean;\n  showLabel: boolean;\n  showValue: boolean;\n  type: string;\n}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\nexport const TransactionComponent = ({ ...props }: TransactionProps) => {\n  const [transactionName, setTransactionName] = useState(\n    props.transactions.length > 0 ? props.transactions[0].name : \"\"\n  );\n  const [transactionValue, setTransactionValue] = useState(\n    props.transactions.length > 0\n      ? _.sum(props.transactions.map((t) => t.value))\n      : 0\n  );\n  const [expanded, setExpanded] = useState(false);\n\n  useEffect(() => {\n    setTransactionName(\n      props.transactions.length > 0 ? props.transactions[0].name : \"\"\n    );\n    setTransactionValue(\n      props.transactions.length > 0\n        ? _.sum(props.transactions.map((t) => t.value))\n        : 0\n    );\n  }, [props.transactions, props.total]);\n\n  const handleFocus = (event) => {\n    event.target.select();\n  };\n\n  const totalValue = 0;\n\n  return (\n    <TransactionView>\n      <RowContainer>\n        {props.showLabel && (\n          <TransactionLabelInput\n            dir=\"rtl\"\n            id=\"outlined-adornment-weight\"\n            value={props.total ? \"סה״כ\" : transactionName}\n            startAdornment={\n              <IconButton style={{ opacity: props.total ? 0 : 0.5 }}>\n                <i\n                  className={TransactionHelper.getIcon(props.type).iconName}\n                ></i>\n              </IconButton>\n            }\n            readOnly\n            onFocus={handleFocus}\n            style={{\n              textAlign: \"right\",\n              backgroundColor: props.total ? \"aquamarine\" : \"#f3f3f3\",\n              borderRadius: 0,\n              height: \"45px\",\n              borderLeft: \"1px solid white\",\n            }}\n            onChange={(event) => {\n              setTransactionName(event.target.value);\n            }}\n            aria-describedby=\"outlined-weight-helper-text\"\n            inputProps={{\n              \"aria-label\": \"weight\",\n              style: {\n                textAlign: \"right\",\n                width: \"240px\",\n                fontFamily: \"'Varela Round', sans-serif\",\n                fontSize: \"18px\",\n                fontWeight: 400,\n              },\n            }}\n            labelWidth={0}\n          />\n        )}\n        {!expanded && props.showValue === true && (\n          <ValueInput\n            dir=\"rtl\"\n            contentEditable={false}\n            id=\"outlined-adornment-weight\"\n            onFocus={handleFocus}\n            readOnly\n            value={\n              !expanded\n                ? transactionValue === 0\n                  ? \"\"\n                  : MoneyUtil.numberWithCommas(transactionValue)\n                : totalValue\n            }\n            style={{\n              backgroundColor: props.total ? \"aquamarine\" : \"#e7e7e7\",\n              borderRadius: 0,\n              height: \"45px\",\n            }}\n            onChange={(event) => {\n              setTransactionValue(parseFloat(event.target.value));\n            }}\n            startAdornment={<ShekelSymbol value={transactionValue} />}\n            aria-describedby=\"outlined-weight-helper-text\"\n            inputProps={{\n              \"aria-label\": \"weight\",\n              style: {\n                textAlign: \"right\",\n                fontFamily: \"'Varela Round', sans-serif\",\n                fontSize: \"20px\",\n                fontWeight: 400,\n              },\n            }}\n            labelWidth={0}\n          />\n        )}\n      </RowContainer>\n    </TransactionView>\n  );\n};\n","import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport { Transaction } from \"../../model/transaction\";\nimport {\n  ExpandSection,\n  LabelInput,\n  RowContainer,\n  ValueInput,\n} from \"../common/transactionRow\";\nimport _ from \"lodash\";\nimport { TransactionComponent } from \"./transactionComponent\";\nimport { TransactionHelper } from \"../../util/transactionHelper\";\nimport { ShekelSymbol } from \"../common/shekelSymbol\";\nimport { MoneyUtil } from \"../../util/MoneyUtil\";\n\n//region [[ Styles ]]\n\nconst TransactionCategoryView = styled(Paper)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  marginBottom: \"15px\",\n});\n\nconst ChildrenContainer = styled(\"div\")({\n  display: \"flex\",\n  flexDirection: \"column\",\n});\n\nconst TransactionRow = styled(\"div\")({\n  display: \"flex\",\n  flexDirection: \"row-reverse\",\n});\n\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface TransactionCategoryProps {\n  transactions: Transaction[];\n  type: string;\n  color: string;\n  showLabel: boolean;\n  months: number[];\n  total?: number;\n}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\nexport const TransactionCategoryComponent = ({\n  ...props\n}: TransactionCategoryProps) => {\n  const [expanded, setExpanded] = useState(true);\n  const [total, setTotal] = useState(props.total ? props.total : 0);\n  const [folderName, setFolderName] = useState(\"\");\n\n  const [uniqueTransactions, setUniqueTransactions] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (!props.total) {\n      setTotal(\n        _.sum(\n          props.transactions.map((transaction) => {\n            if (transaction.debit) {\n              return parseInt(transaction.debit!);\n            } else {\n              return parseInt(transaction.credit!);\n            }\n          })\n        )\n      );\n    }\n\n    setUniqueTransactions(_.uniq(props.transactions.map((t) => t.name)));\n  }, [props.transactions, props.type]);\n\n  const handleFocus = (event) => {\n    event.target.select();\n  };\n\n  return (\n    <TransactionCategoryView>\n      <RowContainer>\n        {props.showLabel && (\n          <LabelInput\n            dir=\"rtl\"\n            id=\"outlined-adornment-weight\"\n            value={props.type}\n            startAdornment={\n              <IconButton style={{ opacity: total ? 0 : 1, minWidth: \"40px\" }}>\n                {props.type === \"income\" ? <WorkIcon /> : <CreditCardIcon />}\n              </IconButton>\n            }\n            onFocus={handleFocus}\n            endAdornment={\n              <ExpandSection>\n                {!expanded ? (\n                  <IconButton\n                    disabled={props.transactions.length === 0}\n                    style={{\n                      opacity: props.transactions.length > 0 ? 1 : 0,\n                    }}\n                    onClick={() => {\n                      setExpanded(!expanded);\n                    }}\n                  >\n                    <ExpandMoreIcon />\n                  </IconButton>\n                ) : (\n                  <IconButton\n                    disabled={props.transactions.length === 0}\n                    style={{\n                      opacity: props.transactions.length > 0 ? 1 : 0,\n                    }}\n                    onClick={() => {\n                      setExpanded(!expanded);\n                    }}\n                  >\n                    <ExpandLessIcon />\n                  </IconButton>\n                )}\n              </ExpandSection>\n            }\n            style={{\n              textAlign: \"right\",\n              backgroundColor: props.color,\n              borderRadius: 0,\n              borderLeft: \"1px solid white\",\n            }}\n            onChange={(event) => {\n              setFolderName(event.target.value);\n            }}\n            aria-describedby=\"outlined-weight-helper-text\"\n            inputProps={{\n              \"aria-label\": \"weight\",\n              style: {\n                textAlign: \"right\",\n                width: \"240px\",\n                fontFamily: \"'Varela Round', sans-serif\",\n                fontSize: \"20px\",\n                fontWeight: 400,\n              },\n            }}\n            labelWidth={0}\n          />\n        )}\n        {props.months.map((month) => (\n          <ValueInput\n            dir=\"rtl\"\n            id=\"outlined-adornment-weight\"\n            onFocus={handleFocus}\n            readOnly\n            value={MoneyUtil.numberWithCommas(\n              TransactionHelper.sumTransactions(\n                TransactionHelper.getTransactionOfMonth(\n                  props.transactions,\n                  month\n                )\n              )\n            )}\n            style={{\n              backgroundColor: props.color,\n              borderRadius: 0,\n              fontWeight: 500,\n              borderLeft: \"1px solid white\",\n            }}\n            startAdornment={\n              <ShekelSymbol\n                value={TransactionHelper.sumTransactions(\n                  TransactionHelper.getTransactionOfMonth(\n                    props.transactions,\n                    month\n                  )\n                )}\n              />\n            }\n            aria-describedby=\"outlined-weight-helper-text\"\n            inputProps={{\n              \"aria-label\": \"weight\",\n              style: {\n                textAlign: \"right\",\n\n                fontFamily: \"'Varela Round', sans-serif\",\n                fontSize: \"20px\",\n                fontWeight: 400,\n              },\n            }}\n            labelWidth={0}\n          />\n        ))}\n      </RowContainer>\n      <ChildrenContainer>\n        {expanded &&\n          uniqueTransactions.map((name) => {\n            const unique = props.transactions.filter((t) => t.name === name);\n\n            return (\n              <TransactionRow>\n                {props.months.map((month, index) => {\n                  const uniquePerMonth = unique.filter(\n                    (t) => (t.date as any).getMonth() === month\n                  );\n\n                  return (\n                    <>\n                      {index === 0 && (\n                        <TransactionComponent\n                          type={props.type}\n                          transactions={\n                            uniquePerMonth.length > 0\n                              ? uniquePerMonth\n                              : [\n                                  {\n                                    name: name,\n                                    value: 0,\n                                    type: \"income\",\n                                    subTransactions: [],\n                                  },\n                                ]\n                          }\n                          showLabel={true}\n                          showValue={false}\n                        />\n                      )}\n\n                      <TransactionComponent\n                        type={props.type}\n                        transactions={\n                          uniquePerMonth.length > 0\n                            ? uniquePerMonth\n                            : [\n                                {\n                                  name: name,\n                                  value: 0,\n                                  type: \"income\",\n                                  subTransactions: [],\n                                },\n                              ]\n                        }\n                        showLabel={false}\n                        showValue={true}\n                      />\n                    </>\n                  );\n                })}\n              </TransactionRow>\n            );\n          })}\n      </ChildrenContainer>\n    </TransactionCategoryView>\n  );\n};\n","import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { SectionTitle } from \"./sectionTitle\";\nimport { SortType, Transaction } from \"../../model/transaction\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport _ from \"lodash\";\nimport { TransactionCategoryComponent } from \"../transaction/transactionCategory\";\nimport { TransactionHelper } from \"../../util/transactionHelper\";\n\n//region [[ Styles ]]\n\nconst SectionComponentView = styled(\"div\")({\n  marginBottom: \"20px\",\n  width: \"100%\",\n  position: \"relative\",\n});\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface SectionComponentProps {\n  transactions: Transaction[];\n  categories: string[];\n  title: string;\n  primaryColor: string;\n  secondaryColor: string;\n  showLabel: boolean;\n  months: number[];\n  expandable?: boolean;\n  isBalance?: boolean;\n}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\nexport const SectionComponent = ({ ...props }: SectionComponentProps) => {\n  const [transactions, setTransactions] = useState(props.transactions);\n  const [currentSort, setCurrentSort] = useState(SortType.DESC);\n  const [total, setTotal] = useState(0);\n\n  const [expanded, setExpanded] = useState(false);\n\n  useEffect(() => {\n    setTransactions(\n      _.orderBy(\n        props.transactions,\n        [\"value\"],\n        [currentSort === SortType.ASC ? \"asc\" : \"desc\"]\n      ).slice()\n    );\n\n    setTotal(\n      _.sum(\n        props.transactions.map((transaction) => {\n          if (transaction.debit) {\n            return parseInt(transaction.debit!);\n          } else {\n            return parseInt(transaction.credit!);\n          }\n        })\n      )\n    );\n  }, [currentSort, props.transactions, props.categories]);\n\n  const setSortType = (sortType: SortType) => {\n    setCurrentSort(sortType);\n  };\n\n  return (\n    <SectionComponentView>\n      <SectionTitle\n        title={props.title}\n        setSortType={setSortType}\n        transactions={props.transactions}\n        months={props.months}\n        currentSort={currentSort}\n        onExpand={() => {\n          setExpanded(!expanded);\n        }}\n        expandable={props.expandable}\n        total={total}\n        categories={props.categories}\n        expanded={expanded}\n        isBalance={props.isBalance}\n        color={props.primaryColor}\n      />\n\n      {expanded &&\n        props.categories.map((category) => {\n          const categoryTransactions = props.transactions.filter(\n            (transaction) =>\n              TransactionHelper.getType(transaction.name) === category\n          );\n\n          return categoryTransactions.length > 0 ? (\n            <TransactionCategoryComponent\n              months={props.months}\n              transactions={categoryTransactions}\n              color={props.secondaryColor}\n              showLabel={props.showLabel}\n              type={category}\n            />\n          ) : (\n            <></>\n          );\n        })}\n    </SectionComponentView>\n  );\n};\n","import * as React from \"react\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport { SectionComponent } from \"../section/sectionComponent\";\nimport { Transaction } from \"../../model/transaction\";\nimport {\n  monthNames,\n  TitleWidth,\n  TransactionWidth,\n} from \"../common/transactionRow\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\n\n//region [[ Styles ]]\nconst CashFlowView = styled((props) => <div {...props} />)({\n  width: \"100%\",\n});\n\nconst MonthTitle = styled((props) => <div {...props} />)({\n  color: \"grey\",\n\n  textAlign: \"center\",\n});\n\nconst MonthName = styled((props) => <div {...props} />)({\n  color: \"grey\",\n  fontSize: \"14px\",\n  textAlign: \"center\",\n});\n\nconst SingleMonthTitle = styled((props) => <div {...props} />)({\n  display: \"flex\",\n  justifyContent: \"center\",\n  flex: 1,\n  flexDirection: \"column\",\n  width: TitleWidth + \"px\",\n});\n\nconst MonthsContainers = styled((props) => <div {...props} />)({\n  display: \"flex\",\n  width: \"100%\",\n  marginRight: TitleWidth + \"px\",\n  justifyContent: \"flex-end\",\n  flexDirection: \"row-reverse\",\n});\n\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface MonthComponentProps {\n  transactions: Transaction[];\n  categories: string[];\n  month: string;\n  showLabel: boolean;\n  months: number[];\n}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\nexport const CashFlow = ({ ...props }: MonthComponentProps) => {\n  useEffect(() => {}, [props.months]);\n\n  return (\n    <CashFlowView>\n      <header\n        className=\"App-header\"\n        style={{ justifyContent: \"start\", alignItems: \"end\" }}\n      >\n        {props.transactions.length > 0 && (\n          <>\n            <MonthsContainers>\n              <SingleMonthTitle\n                style={{ width: TitleWidth + \"px\", flex: \"none\" }}\n              />\n\n              {props.months.map((month) => (\n                <SingleMonthTitle>\n                  <MonthName>{monthNames[month - 1]}</MonthName>\n                  <IconButton>\n                    <MonthTitle>{month}</MonthTitle>\n                  </IconButton>\n                </SingleMonthTitle>\n              ))}\n            </MonthsContainers>\n\n            <SectionComponent\n              title={\"הכנסות\"}\n              categories={props.categories}\n              primaryColor={\"turquoise\"}\n              secondaryColor={\"aquamarine\"}\n              transactions={props.transactions.filter((t) => t.credit)}\n              showLabel={props.showLabel}\n              months={props.months}\n            />\n            <SectionComponent\n              title={\"הוצאות\"}\n              categories={props.categories}\n              primaryColor={\"#FF6666\"}\n              secondaryColor={\"#FF9999\"}\n              transactions={props.transactions.filter((t) => t.debit)}\n              showLabel={props.showLabel}\n              months={props.months}\n            />\n\n            <SectionComponent\n              title={\"עובר ושב\"}\n              isBalance={true}\n              categories={props.categories}\n              primaryColor={\"#3399FF\"}\n              secondaryColor={\"#CCE5FF\"}\n              transactions={props.transactions.filter(\n                (t) => t.debit || t.credit\n              )}\n              expandable={false}\n              showLabel={props.showLabel}\n              months={props.months}\n            />\n          </>\n        )}\n      </header>\n    </CashFlowView>\n  );\n};\n","import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Transaction } from \"../../../model/transaction\";\nimport Button from \"@material-ui/core/Button\";\nimport { ExcelUtil } from \"../../../util/excelUtil\";\nimport _ from \"lodash\";\nimport { TransactionHelper } from \"../../../util/transactionHelper\";\nimport { CashFlow } from \"../../cashFlow/cashFlow\";\nimport styled from \"@material-ui/core/styles/styled\";\n\n//region [[ Styles ]]\nconst Timeline = styled((props) => <div {...props} />)({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  marginTop: \"40px\",\n  width: \"100%\",\n  marginRight: \"40px\",\n});\n\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface CashflowProps {\n  timeframe: number;\n  startMonth: number;\n}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\nexport const BankAccountTimeline = ({ ...props }: CashflowProps) => {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [categories, setCategories] = useState<string[]>([]);\n  const [monthTimeframe, setMonthsTimeframe] = useState<number[]>([]);\n\n  useEffect(() => {\n    let months: number[] = [];\n    for (\n      let i = props.startMonth;\n      i < props.timeframe + props.startMonth;\n      i++\n    ) {\n      months.push(i + 1);\n    }\n    setMonthsTimeframe(months);\n  }, [props.timeframe, props.startMonth]);\n\n  const handleResult = (resp) => {\n    const cats = _.uniq(\n      resp.map((transaction) => TransactionHelper.getType(transaction.name))\n    );\n    setCategories(cats);\n    setTransactions(resp);\n  };\n\n  return (\n    <div className=\"App\">\n      <input\n        accept=\"*\"\n        style={{ display: \"none\" }}\n        id=\"raised-button-file\"\n        multiple\n        type=\"file\"\n        onChange={(event) => {\n          ExcelUtil.readFile(event, handleResult);\n        }}\n      />\n      {transactions.length === 0 && (\n        <label htmlFor=\"raised-button-file\">\n          <Button variant=\"contained\" component=\"span\">\n            Upload\n          </Button>\n        </label>\n      )}\n\n      <Timeline>\n        <CashFlow\n          month={\"מרץ\"}\n          months={monthTimeframe}\n          categories={categories}\n          transactions={transactions}\n          showLabel={true}\n        />\n      </Timeline>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { withStyles } from \"@material-ui/core\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport { useEffect, useState } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\n//region [[ Styles ]]\n\nconst MainToolbarView = styled((props) => <div {...props} />)({\n  height: \"80px\",\n  borderBottom: \"1px solid #ebebeb\",\n  width: \"100%\",\n  display: \"flex\",\n  flexDirection: \"row-reverse\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n});\n\nconst AccountLogo = styled(Paper)({\n  height: \"60px\",\n  backgroundColor: \"#CCE5FF\",\n  width: \"60px\",\n\n  marginLeft: \"10px\",\n});\n\nconst AccountNameContainer = styled(\"div\")({});\n\nconst AccountName = styled(\"div\")({\n  fontWeight: 600,\n  fontSize: \"20px\",\n});\n\nconst RightSection = styled(\"div\")({\n  display: \"flex\",\n  marginRight: \"10px\",\n  flexDirection: \"row-reverse\",\n});\n\nconst LeftSection = styled(\"div\")({\n  marginLeft: \"10px\",\n});\n\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface MainToolbarProps {\n  onChangeTimeframe: (value) => void;\n  onChangeStartMonth: (value) => void;\n  timeframe: number;\n  startMonth: number;\n}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\nexport const MainToolbar = ({ ...props }: MainToolbarProps) => {\n  const [startMonth, setStartMonth] = useState(props.startMonth);\n  const [timeframe, setTimeframe] = useState(props.timeframe);\n\n  useEffect(() => {}, [startMonth, timeframe]);\n\n  const onChangeTimeframe = (event) => {\n    setTimeframe(event.target.value);\n    props.onChangeTimeframe(event.target.value);\n  };\n\n  return (\n    <MainToolbarView>\n      <RightSection>\n        <AccountLogo></AccountLogo>\n        <AccountNameContainer>\n          <AccountName>בנק לאומי</AccountName>\n        </AccountNameContainer>\n      </RightSection>\n\n      <LeftSection>\n        <IconButton>\n          <ArrowBackIosIcon\n            onClick={() => {\n              if (props.startMonth + timeframe + 1 <= 12) {\n                props.onChangeStartMonth(props.startMonth + 1);\n              }\n            }}\n          />\n        </IconButton>\n\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          value={timeframe}\n          onChange={onChangeTimeframe}\n          label=\"Age\"\n        >\n          <MenuItem aria-label=\"None\" value=\"\" />\n          <MenuItem value={1}>חודש</MenuItem>\n          <MenuItem value={2}>חודשיים</MenuItem>\n          <MenuItem value={3}>שלושה חודשים</MenuItem>\n          <MenuItem value={6}>חצי שנה</MenuItem>\n          <MenuItem value={12}>שנה</MenuItem>\n        </Select>\n        <IconButton\n          onClick={() => {\n            if (props.startMonth - 1 >= 0) {\n              props.onChangeStartMonth(props.startMonth - 1);\n            }\n          }}\n        >\n          <ArrowForwardIosIcon />\n        </IconButton>\n      </LeftSection>\n    </MainToolbarView>\n  );\n};\n","import * as React from \"react\";\nimport { withStyles } from \"@material-ui/core\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport { BankAccountTimeline } from \"../bankAccount/bankAccountTimeline\";\nimport { MainToolbar } from \"../../toolbars/mainToolbar\";\nimport { useState } from \"react\";\n\n//region [[ Styles ]]\n\nconst HomePageView = styled((props) => <div {...props} />)({\n  width: \"100%\",\n});\n\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface HomePageProps {}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\nexport const HomePage = ({ ...props }: HomePageProps) => {\n  const [timeframe, setTimeframe] = useState(6);\n  const [startMonth, setStartMonth] = useState(0);\n\n  return (\n    <HomePageView>\n      <MainToolbar\n        onChangeTimeframe={(value) => {\n          setTimeframe(value);\n        }}\n        onChangeStartMonth={(value) => {\n          setStartMonth(value);\n        }}\n        startMonth={startMonth}\n        timeframe={timeframe}\n      />\n\n      <BankAccountTimeline timeframe={timeframe} startMonth={startMonth} />\n    </HomePageView>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Navigation from \"./components/pages/navigation/navigation\";\nimport { SignInPage } from \"./components/pages/signin/signInPage\";\nimport * as ROUTES from \"./constants/routes\";\nimport SignUpPage from \"./components/pages/signup/signUpPage\";\nimport { createBrowserHistory } from \"history\";\nimport { withAuthentication } from \"./components/Session\";\nimport { HomePage } from \"./components/pages/homePage/homePage\";\n\n//region [[ Props ]]\n\nexport interface AppProps {}\n\n//endregion [[ Props ]]\n\nconst historyGlobal = createBrowserHistory({ forceRefresh: true });\n\nexport const App = ({ ...props }: AppProps) => {\n  return (\n    <>\n      <Router history={historyGlobal}>\n        <div>\n          <Navigation history={historyGlobal} />\n\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={\"/\"} component={HomePage} />\n\n          {/*\n\n\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />*/}\n        </div>\n      </Router>\n    </>\n  );\n};\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, { FirebaseContext } from \"./components/Firebase\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <FirebaseContext.Provider value={new Firebase()}>\n          <App />\n      </FirebaseContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}