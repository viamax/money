{"version":3,"sources":["model/transaction.ts","components/Firebase/firebase.ts","components/Firebase/context.tsx","components/Firebase/index.ts","components/pages/signOut/signOutButton.tsx","constants/routes.ts","components/Session/context.ts","components/Session/withAuthentication.tsx","components/pages/navigation/navigation.tsx","components/pages/signin/signInPage.tsx","components/pages/signup/signUpPage.tsx","util/excelUtil.ts","util/Icons.ts","util/transactionHelper.tsx","components/common/transactionRow.ts","util/MoneyUtil.ts","components/common/shekelSymbol.tsx","components/section/sectionSumUp.tsx","components/section/category/transaction/transactionCell.tsx","components/section/category/category.tsx","components/section/section.tsx","components/cashFlow/cashFlow.tsx","components/dialog/categorizeTransactionsTable.tsx","components/dialog/selectCategoryDialog.tsx","components/context/timeframeContext.tsx","components/pages/bankAccount/bankAccountTimeline.tsx","components/toolbars/mainToolbar.tsx","components/pages/homePage/homePage.tsx","components/context/useTimeframe.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["SortType","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","auth","doCreateUserWithEmailAndPassword","email","password","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","app","initializeApp","this","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","history","Button","color","onClick","event","push","AuthUserContext","withAuthentication","WithAuthentication","listener","state","authUser","onAuthStateChanged","setState","Provider","value","NavigationView","styled","flexGrow","MenuArea","display","alignItems","MenuButton","StyledToolbar","Toolbar","justifyContent","NavigationAuth","to","NavigationNonAuth","Navigation","AppBar","position","style","backgroundColor","IconButton","edge","aria-label","Typography","variant","SignInPageView","SignInPage","SignInForm","compose","withRouter","useState","setEmail","setPassword","error","setError","isInvalid","onSubmit","preventDefault","then","catch","name","onChange","target","type","placeholder","disabled","message","SignUpPageView","SignUpPage","SignUpForm","username","setUsername","passwordOne","setPasswordOne","passwordTwo","setPasswordTwo","ExcelUtil","ws","callback","vm","files","length","Error","reader","FileReader","onload","e","bstr","result","wb","XLSX","cellDates","wsname","SheetNames","Sheets","handleLeumiData","readAsBinaryString","sheet","row","rowNum","colNum","range","decode_range","s","r","c","nextCell","encode_cell","v","w","transactions","data","sheet2arr","i","date","split","transactionDate","Date","parseInt","transactionName","transactionId","transactionDebit","undefined","replace","transactionCredit","transactionBalance","id","debit","credit","balance","subTransactions","moneyIcons","iconCode","iconName","TransactionHelper","indexOf","month","filter","t","getMonth","transactionsOfMonth","getTransactionOfMonth","startMonth","timeframe","console","log","_","sum","map","transaction","ExpandSection","monthNames","RowContainer","fontSize","fontWeight","borderRadius","borderTop","fontFamily","flexDirection","TransactionRow","OutlinedInput","borderColor","paddingRight","borderLeft","ValueInput","flex","LabelInput","width","TitleWidth","MoneyUtil","x","toString","ShekelSymbolView","ShekelSymbol","InputAdornment","disableTypography","minWidth","marginRight","marginLeft","opacity","SectionTitleView","Paper","height","SectionLabel","textAlign","SectionSumValue","useStyles","makeStyles","input","SectionSumUp","classes","getValue","numberWithCommas","isBalance","getMonthBalance","sumTransactions","dir","title","startAdornment","endAdornment","expandable","expanded","categories","onExpand","inputProps","className","months","TransactionCellView","isLabel","TransactionLabel","TransactionCellInput","input2","TransactionCell","setTransactionName","transactionValue","setTransactionValue","useEffect","total","handleFocus","select","totalValue","showLabel","getIcon","readOnly","onFocus","showValue","contentEditable","parseFloat","CategoryView","ChildrenContainer","CategoryLabel","CategoryCell","Category","setExpanded","setTotal","uniqueTransactions","setUniqueTransactions","uniq","getCategorySum","unique","index","uniquePerMonth","SectionView","marginBottom","Section","setTransactions","DESC","currentSort","setCurrentSort","orderBy","ASC","slice","setSortType","sortType","primaryColor","category","categoryTransactions","getType","secondaryColor","CashFlowView","MonthTitle","MonthName","SingleMonthTitle","MonthsContainers","marginTop","CashFlow","CategorizeTransactionsTableView","theme","root","overflowX","table","createData","calories","fat","carbs","protein","CategorizeTransactionsTable","otherTransactions","Table","TableHead","TableRow","TableCell","align","TableBody","key","SelectCategoryDialogView","SelectCategoryDialog","open","setOpen","handleClose","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","timeframeContext","setCurrentTimeframe","setCurrentStartMonth","Timeline","BankAccountTimeline","setCategories","monthTimeframe","setMonthsTimeframe","useContext","selectCategoryDialogOpen","handleResult","resp","cats","filterTransactions","getTransactionsByTimeframe","accept","multiple","readFile","htmlFor","component","MainToolbarView","borderBottom","AccountLogo","AccountNameContainer","AccountName","RightSection","LeftSection","MainToolbar","Select","labelId","label","MenuItem","HomePageView","HomePage","setStartMonth","setTimeframe","useCallback","currentStartMonth","currentTimeframe","useTimeframe","historyGlobal","createBrowserHistory","forceRefresh","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.70edf06d.chunk.js","sourcesContent":["export interface Transaction {\n    name: string;\n    date?: Date;\n    id?: string;\n    debit?: string;\n    credit?: string;\n    balance?: string;\n    value: number;\n    type: string;\n    subTransactions: Transaction[];\n}\n\nexport enum SortType {\n ASC,\n    DESC,\n}","import app from 'firebase/app';\nimport 'firebase/auth';\n\n\nconst config = {\n    apiKey: \"AIzaSyDzcylgM2E7bcI910x1Hu09aIWFvvIq0kU\",\n    authDomain: \"moneyxxx.firebaseapp.com\",\n    databaseURL: \"https://moneyxxx.firebaseio.com\",\n    projectId: \"moneyxxx\",\n    storageBucket: \"moneyxxx.appspot.com\",\n    messagingSenderId: \"701739152964\",\n    appId: \"1:701739152964:web:2f0bd6a5d542d85c1fee11\",\n    measurementId: \"G-R28P30NQSN\"\n}\n\n\n/*const config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};*/\n\nclass Firebase {\n    private auth;\n    constructor() {\n        app.initializeApp(config);\n        this.auth = app.auth();\n    }\n\n    // *** Auth API ***\n\n    doCreateUserWithEmailAndPassword = (email, password) =>\n        this.auth.createUserWithEmailAndPassword(email, password);\n\n    doSignInWithEmailAndPassword = (email, password) =>\n        this.auth.signInWithEmailAndPassword(email, password);\n\n    doSignOut = () => this.auth.signOut();\n\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n    doPasswordUpdate = password =>\n        this.auth.currentUser.updatePassword(password);\n\n\n}\n\nexport default Firebase;","import React, { Component } from \"react\";\nimport Firebase from \"./firebase\";\n\nconst FirebaseContext = React.createContext<any | null>(null);\n\nexport const withFirebase = (Component) => (props: any) => (\n  <FirebaseContext.Consumer>\n    {(firebase) => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import Firebase from './firebase';\nimport FirebaseContext, { withFirebase } from './context';\n\nexport default Firebase;\n\n\nexport { FirebaseContext, withFirebase };","import React from \"react\";\n\nimport { withFirebase } from \"../../Firebase\";\nimport Button from \"@material-ui/core/Button\";\nimport * as ROUTES from \"../../../constants/routes\";\n\nconst SignOutButton = ({ firebase, history }) => {\n  const signOut = (event) => {\n    firebase.doSignOut(event);\n    history.push(ROUTES.SIGN_IN);\n  };\n\n  return (\n    <Button color=\"inherit\" onClick={signOut}>\n      Sign Out\n    </Button>\n  );\n};\n\nexport default withFirebase(SignOutButton);\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from \"react\";\n\nimport AuthUserContext from \"./context\";\nimport { withFirebase } from \"../Firebase\";\n\nconst withAuthentication = (Component) => {\n  class WithAuthentication extends React.Component {\n    private listener;\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: null,\n      };\n    }\n\n    componentDidMount() {\n      this.listener = (this.props as any).firebase.auth.onAuthStateChanged(\n        (authUser) => {\n          authUser\n            ? this.setState({ authUser })\n            : this.setState({ authUser: null });\n        }\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={(this.state as any).authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as ROUTES from \"../../../constants/routes\";\nimport SignOutButton from \"../signOut/signOutButton\";\nimport { SignUpFormPageProps } from \"../signup/signUpPage\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport { AppBar } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { AuthUserContext } from \"../../Session\";\n\n//region [[ Styles ]]\n\nconst NavigationView = styled((props) => <div {...props} />)({\n  flexGrow: 1,\n  color: \"blue\",\n});\n\nconst MenuArea = styled((props) => <div {...props} />)({\n  display: \"flex\",\n  alignItems: \"center\",\n});\n\nconst MenuButton = styled(Button)({\n  color: \"white\",\n});\n\nconst StyledToolbar = styled(Toolbar)({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n});\n\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface NavigationProps {\n  history: any;\n}\n\nexport interface NavigationAuthProps {\n  email: any;\n  history: any;\n}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\nconst Navigation = ({ ...props }: NavigationProps) => {\n  return (\n    <NavigationView>\n      <AppBar\n        position=\"static\"\n        style={{ backgroundColor: \"white\", color: \"black\", display: \"none\" }}\n      >\n        <StyledToolbar>\n          <MenuArea>\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\">Money</Typography>\n          </MenuArea>\n\n          <div>\n            <AuthUserContext.Consumer>\n              {(authUser: any) =>\n                authUser ? (\n                  <NavigationAuth\n                    email={authUser.email}\n                    history={props.history}\n                  />\n                ) : (\n                  <NavigationNonAuth />\n                )\n              }\n            </AuthUserContext.Consumer>\n          </div>\n        </StyledToolbar>\n      </AppBar>\n    </NavigationView>\n  );\n};\n\nconst NavigationAuth = ({ ...props }: NavigationAuthProps) => {\n  return (\n    <>\n      <span>Welcome {props.email}</span>\n      <MenuButton color=\"inherit\">\n        <Link to={ROUTES.LANDING}>Landing</Link>\n      </MenuButton>\n\n      <MenuButton>\n        <Link color={\"white\"} to={ROUTES.HOME}>\n          Home\n        </Link>\n      </MenuButton>\n\n      <MenuButton>\n        <Link to={ROUTES.ACCOUNT}>Account</Link>\n      </MenuButton>\n\n      <SignOutButton history={props.history} />\n    </>\n  );\n};\n\nconst NavigationNonAuth = () => {\n  return (\n    <>\n      <Button color=\"inherit\">\n        <Link to={ROUTES.LANDING}>Landing</Link>\n      </Button>\n\n      <Button color=\"inherit\">\n        <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n      </Button>\n    </>\n  );\n};\n\nexport default Navigation;\n","import React, { Component, useState } from \"react\";\nimport { compose } from \"recompose\";\nimport * as ROUTES from \"../../../constants/routes\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport { FirebaseContext } from \"../../Firebase\";\nimport { withFirebase } from \"../../Firebase\";\nimport { Link, withRouter } from \"react-router-dom\";\n\n//region [[ Styles ]]\n\nconst SignInPageView = styled((props) => <div {...props} />)({});\n\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface SignInPageProps {}\n\nexport interface SignInFormPageProps {\n  firebase: any;\n  history: any;\n}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\nexport const SignInPage = ({ ...props }: SignInPageProps) => {\n  return (\n    <SignInPageView>\n      <div>\n        <h1>SignIn</h1>\n        <FirebaseContext.Consumer>\n          {(firebase) => <SignInForm firebase={firebase} />}\n        </FirebaseContext.Consumer>\n      </div>\n    </SignInPageView>\n  );\n};\n\nconst SignInFormBase = ({ ...props }: SignInFormPageProps) => {\n  const [email, setEmail] = useState(\"viamax@gmail.com\");\n  const [password, setPassword] = useState(\"12345\");\n  const [error, setError] = useState<any>(null);\n\n  const isInvalid = password === \"\" || email === \"\";\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        setEmail(\"\");\n        setPassword(\"\");\n        props.history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        setError(error);\n      });\n  };\n\n  const onChangePassword = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const onChangeEmail = (event) => {\n    setEmail(event.target.value);\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        name=\"email\"\n        value={email}\n        onChange={onChangeEmail}\n        type=\"text\"\n        placeholder=\"Email Address\"\n      />\n      <br />\n      <input\n        name=\"password\"\n        value={password}\n        onChange={onChangePassword}\n        type=\"password\"\n        placeholder=\"Password\"\n      />\n      <button disabled={isInvalid} type=\"submit\">\n        Sign In\n      </button>\n\n      {error && <p>{error ? error.message : \"\"}</p>}\n    </form>\n  );\n};\n\nconst SignInLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nexport default SignInPage;\n\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\n\nexport { SignInForm, SignInLink };\n","import React, { Component, useState } from \"react\";\nimport { compose } from \"recompose\";\nimport * as ROUTES from \"../../../constants/routes\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport { FirebaseContext } from \"../../Firebase\";\nimport { withFirebase } from \"../../Firebase\";\nimport { Link, withRouter } from \"react-router-dom\";\n\n//region [[ Styles ]]\n\nconst SignUpPageView = styled((props) => <div {...props} />)({});\n\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface SignUpPageProps {}\n\nexport interface SignUpFormPageProps {\n  firebase: any;\n  history: any;\n}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\nexport const SignUpPage = ({ ...props }: SignUpPageProps) => {\n  return (\n    <SignUpPageView>\n      <div>\n        <h1>SignUp</h1>\n        <FirebaseContext.Consumer>\n          {(firebase) => <SignUpForm firebase={firebase} />}\n        </FirebaseContext.Consumer>\n      </div>\n    </SignUpPageView>\n  );\n};\n\nconst SignUpFormBase = ({ ...props }: SignUpFormPageProps) => {\n  const [username, setUsername] = useState(\"max\");\n  const [email, setEmail] = useState(\"viamax@gmail.com\");\n  const [passwordOne, setPasswordOne] = useState(\"1234\");\n  const [passwordTwo, setPasswordTwo] = useState(\"1234\");\n  const [error, setError] = useState<any>(null);\n\n  const isInvalid =\n    passwordOne !== passwordTwo ||\n    passwordOne === \"\" ||\n    email === \"\" ||\n    username === \"\";\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then((authUser) => {\n        setUsername(\"\");\n        setEmail(\"\");\n        setPasswordOne(\"\");\n        setPasswordTwo(\"\");\n        props.history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        setError(error);\n      });\n  };\n\n  const onChangeUsername = (event) => {\n    setUsername(event.target.value);\n  };\n\n  const onChangeEmail = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const onChangePasswordOne = (event) => {\n    setPasswordOne(event.target.value);\n  };\n\n  const onChangePasswordTwo = (event) => {\n    setPasswordTwo(event.target.value);\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        name=\"username\"\n        value={username}\n        onChange={onChangeUsername}\n        type=\"text\"\n        placeholder=\"Full Name\"\n      />\n      <br />\n      <input\n        name=\"email\"\n        value={email}\n        onChange={onChangeEmail}\n        type=\"text\"\n        placeholder=\"Email Address\"\n      />\n      <br />\n      <input\n        name=\"passwordOne\"\n        value={passwordOne}\n        onChange={onChangePasswordOne}\n        type=\"password\"\n        placeholder=\"Password\"\n      />\n      <br />\n      <input\n        name=\"passwordTwo\"\n        value={passwordTwo}\n        onChange={onChangePasswordTwo}\n        type=\"password\"\n        placeholder=\"Confirm Password\"\n      />\n      <br />\n      <button disabled={isInvalid} type=\"submit\">\n        Sign Up\n      </button>\n\n      {error && <p>{error ? error.message : \"\"}</p>}\n    </form>\n  );\n};\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nexport default SignUpPage;\n\nconst SignUpForm = compose(withRouter, withFirebase)(SignUpFormBase);\n\nexport { SignUpForm, SignUpLink };\n","\nimport * as XLSX from 'xlsx';\nimport {Transaction} from '../model/transaction';\n\nexport class ExcelUtil {\n    static readFile(event: any, callback: Function ){\n\n        let vm = this;\n\n        /* wire up file reader */\n        const target: DataTransfer = <DataTransfer>(event.target);\n        if (target.files.length !== 1) throw new Error('Cannot use multiple files');\n        const reader: FileReader = new FileReader();\n        reader.onload = (e: any) => {\n            /* read workbook */\n            const bstr: string = e.target.result;\n            const wb: XLSX.WorkBook = XLSX.read(bstr, {type: 'binary',cellDates: true});\n\n            /* grab first sheet */\n            const wsname: string = wb.SheetNames[0];\n            const ws: XLSX.WorkSheet = wb.Sheets[wsname];\n\n            vm.handleLeumiData(ws, callback);\n\n            /* save data */\n            //this.data = <AOA>(XLSX.utils.sheet_to_json(ws, {header: 1}));\n        };\n\n\n        reader.readAsBinaryString(target.files[0]);\n\n\n    }\n\n    static sheet2arr(sheet){\n        let result: any = [];\n        let row;\n        let rowNum;\n        let colNum;\n        let range = XLSX.utils.decode_range(sheet['!ref']);\n        for(rowNum = range.s.r; rowNum <= range.e.r; rowNum++){\n            row = [];\n            for(colNum=range.s.c; colNum<=range.e.c; colNum++){\n                let nextCell = sheet[\n                    XLSX.utils.encode_cell({r: rowNum, c: colNum})\n                    ];\n                if( typeof nextCell === 'undefined' ){\n                    row.push(void 0);\n                } else {\n\n                    if (nextCell != null && nextCell.v != null && nextCell.w == null) {\n                        row.push(nextCell.v);\n                    }\n                    else {\n                        row.push(nextCell.w);\n                    }\n\n\n\n                }\n            }\n            result.push(row);\n        }\n        return result;\n    };\n\n\n    static handleLeumiData(ws: XLSX.WorkSheet, callback) {\n\n        let transactions = [];\n\n        let data = this.sheet2arr(ws);\n\n        if (data != null && data.length > 0) {\n\n            for(let i = 22; i < data.length; i++) {\n\n\n                const date = data[i][0] ? data[i][0].split(\"/\") : null;\n\n                const transactionDate = date ? new Date(parseInt(\"20\"+date[2]), date[1]-1, date[0]) : null;\n\n\n\n                const transactionName =  data[i][1];\n                const transactionId = data[i][2];\n                const transactionDebit = data[i][3] === undefined ? undefined : data[i][3].replace(',', '');\n                const transactionCredit  = data[i][4] === undefined ? undefined : data[i][4].replace(',', '');\n                const transactionBalance =  data[i][5];\n                //newTransaction.AccountBalance = data[i][6].replace(',', '');\n                (transactions as any).push({\n                    name: transactionName,\n                    date: transactionDate,\n                    id: transactionId,\n                    debit: transactionDebit,\n                    credit: transactionCredit,\n                    balance: transactionBalance,\n                    value: transactionDebit | transactionCredit,\n                    type: \"paycheck\",\n                    subTransactions: []\n                });\n            }\n        }\n\n        callback(transactions);\n    }\n\n    handleHapoalimData(ws: XLSX.WorkSheet):Transaction[] {\n\n        return [];\n    }\n\n}\n","export const DEFAULT_ICON = \"default\";\nexport const moneyIcons = {\n    \"הלוואות\": {\n        iconCode: '\"\\f492\"',\n        iconName: \"fas fa-dollar-sign\",\n    },\n    \"העברות\": {\n        iconCode: '\"\\f492\"',\n        iconName: \"fas fa-angle-double-left\",\n    },\n    \"כספומט\": {\n        iconCode: '\"\\f481\"',\n        iconName: \"far fa-money-bill-alt\",\n    },\n    \"זיכויים\": {\n        iconCode: '\"\\f481\"',\n        iconName: \"far fa-money-bill-alt\",\n    },\n    \"משכורת\": {\n        iconCode: '\"\\f481\"',\n        iconName: \"fas fa-suitcase\",\n    },\n    \"ביטוחים\": {\n        iconCode: '\"\\f481\"',\n        iconName: \"far fa-money-bill-alt\",\n    },\n    \"כרטיסי אשראי\": {\n        iconCode: '\"\\f21e\"',\n        iconName: \"far fa-credit-card\",\n    },\n    \"עמלות\": {\n        iconCode: '\"\\f21e\"',\n        iconName: \"fas fa-dollar-sign\",\n    },\n    \"אחר\": {\n        iconCode: '\"\\f481\"',\n        iconName: \"far fa-question-circle\",\n    },\n};\n","import _ from \"lodash\";\nimport { Transaction } from \"../model/transaction\";\nimport React from \"react\";\nimport { moneyIcons } from \"./Icons\";\n\nexport class TransactionHelper {\n  public static getType(transactionName: string) {\n    if (\n      transactionName === \"מב. הפועלים-י\" ||\n      (transactionName && transactionName.indexOf(\"שיק\") !== -1)\n    ) {\n      return \"העברות\";\n    }\n\n    if (\n      transactionName === \"הע. אינטרנט700\" ||\n      transactionName === \"העברה עצמית700\" ||\n      (transactionName && transactionName.indexOf(\"הע. אינט\") !== -1)\n    ) {\n      return \"העברות\";\n    }\n\n    if (\n      (transactionName && transactionName.indexOf(\"מגדל\") !== -1) ||\n      (transactionName && transactionName.indexOf(\"מנורה\") !== -1) ||\n      (transactionName && transactionName.indexOf(\"פניקס\") !== -1) ||\n      (transactionName && transactionName.indexOf(\"מכבי\") !== -1)\n    ) {\n      return \"ביטוחים\";\n    }\n\n    if (\n      (transactionName && transactionName.indexOf(\"כספומט\") !== -1) ||\n      (transactionName && transactionName.indexOf(\"בנקט\") !== -1)\n    ) {\n      return \"כספומט\";\n    }\n\n    if (transactionName === \"פרעון הלוואה\") {\n      return \"הלוואות\";\n    }\n\n    if (\n      transactionName === \"לאומי ויזה י\" ||\n      transactionName === \"ל.מסטרקארדי\" ||\n      (transactionName && transactionName.indexOf(\"לאומי קארד\") !== -1) ||\n      (transactionName && transactionName.indexOf(\"אמריקן אקספר\") !== -1) ||\n      (transactionName && transactionName.indexOf(\"כרטיסי אשראי\") !== -1) ||\n      (transactionName && transactionName.indexOf(\"דיינרס\") !== -1) ||\n      (transactionName && transactionName.indexOf(\"מקס איט\") !== -1)\n    ) {\n      return \"כרטיסי אשראי\";\n    }\n\n    if (\n      (transactionName && transactionName.indexOf(\"עמל.ערוץ\") != -1) ||\n      (transactionName && transactionName.indexOf(\"עמ.הקצאת אשראי\") != -1) ||\n      (transactionName && transactionName.indexOf(\"מסלול מורחב\") != -1) ||\n      transactionName === \"מסלול בסיסי\"\n    ) {\n      return \"עמלות\";\n    }\n\n    if (transactionName === \"רבית זכות\") {\n      return \"זיכויים\";\n    }\n\n    if (transactionName && transactionName.indexOf(\"משכורת\") != -1) {\n      return \"משכורת\";\n    }\n\n    return \"אחר\";\n  }\n\n  public static getTransactionOfMonth(\n    transactions: Transaction[],\n    month: number\n  ) {\n    return transactions.filter((t) => {\n      return t.date!.getMonth() === month;\n    });\n  }\n\n  public static getMonthBalance(transactions: Transaction[], month: number) {\n    const transactionsOfMonth = TransactionHelper.getTransactionOfMonth(\n      transactions,\n      month\n    );\n\n    if (transactionsOfMonth.length > 0) {\n      return transactionsOfMonth[transactionsOfMonth.length - 1].balance;\n    } else {\n      return null;\n    }\n  }\n\n  public static getTransactionsByTimeframe(\n    transactions: Transaction[],\n    startMonth: number,\n    timeframe: number\n  ) {\n    const filterTransactions =\n      transactions.length > 0\n        ? transactions.filter((t) => {\n            console.log(\"t:\" + t.date);\n            return (\n              t.date !== null &&\n              (t.date as any).getMonth() > startMonth &&\n              (t.date as any).getMonth() <= timeframe + startMonth\n            );\n          })\n        : [];\n    return filterTransactions;\n  }\n\n  public static sumTransactions(transactions: Transaction[]) {\n    return _.sum(\n      transactions.map((transaction) => {\n        if (transaction.debit) {\n          return parseInt(transaction.debit!);\n        } else {\n          return parseInt(transaction.credit!);\n        }\n      })\n    );\n  }\n\n  public static getIcon(type: string): { iconName: string } {\n    return moneyIcons[type];\n  }\n}\n","import styled from \"@material-ui/core/styles/styled\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput/OutlinedInput\";\n\n\nexport const ExpandSection = styled(\"div\")({\n    /*top: \"10px\",\n    right: \"-45px\",\n    position: \"absolute\",*/\n});\n\nexport const monthNames = [\"ינואר\", \"פברואר\", \"מרץ\", \"אפריל\", \"מאי\", \"יוני\",\n    \"יולי\", \"אוגוסט\", \"ספטמבר\", \"אוקטובר\", \"נובמבר\", \"דצמבר\"\n];\n\nexport const TitleWidth = 250;\nexport const TransactionWidth = 200;\n\nexport const RowContainer = styled(\"div\")({\n    fontSize: \"18px\",\n    fontWeight: 400,\n    borderRadius: 0,\n    borderTop: \"1px solid white\",\n\n    fontFamily: \"'Assistant', sans-serif\",\n\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n    position: \"relative\",\n});\n\n\n\nexport const TransactionRow = styled(OutlinedInput)( {\n    '&:hover':{\n        '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: \"blue !important;\",\n            borderRadius: \"0px\",\n\n        },\n\n    },\n\n    '& .MuiOutlinedInput-notchedOutline': {\n        borderColor: \"transparent !important;\",\n        borderRadius: \"0px\",\n        '&:hover':{\n            backgroundColor:\"blue !important;\",\n        },\n    },\n\n    '& .MuiOutlinedInput-adornedEnd': {\n        paddingRight: \"0px !important\"\n    },\n    borderLeft: \"1px solid white\",\n\n\n});\n\n\nexport const ValueInput = styled(TransactionRow)({\n    flex:1,\n\n});\n\nexport const LabelInput = styled(TransactionRow)({\n    width: TitleWidth+\"px\"\n});","\n\n\nexport class MoneyUtil {\n    static numberWithCommas(x) {\n\n        return x ? x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"\";\n    }\n}\n","import * as React from \"react\";\nimport { withStyles } from \"@material-ui/core\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\n//region [[ Styles ]]\n\nconst ShekelSymbolView = styled(\"div\")({});\n\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface ShekelSymbolProps {\n  value: number;\n}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\nexport const ShekelSymbol = ({ ...props }: ShekelSymbolProps) => {\n  return (\n    <ShekelSymbolView>\n      <InputAdornment\n        disableTypography={true}\n        style={{\n          fontSize: \"20px\",\n          fontWeight: 400,\n          minWidth: \"20px\",\n          marginRight: \"12px\",\n          marginLeft: \"0\",\n          opacity: props.value === 0 || !props.value ? 0 : 0.5,\n        }}\n        position=\"end\"\n      >\n        ₪\n      </InputAdornment>\n    </ShekelSymbolView>\n  );\n};\n","import * as React from \"react\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { SortType, Transaction } from \"../../model/transaction\";\nimport {\n  ExpandSection,\n  LabelInput,\n  ValueInput,\n} from \"../common/transactionRow\";\nimport WorkIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\nimport { TransactionHelper } from \"../../util/transactionHelper\";\n\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport { MoneyUtil } from \"../../util/MoneyUtil\";\nimport { ShekelSymbol } from \"../common/shekelSymbol\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\n//region [[ Styles ]]\n\nconst SectionTitleView = styled(Paper)({\n  fontSize: \"20px\",\n  fontWeight: 400,\n  borderRadius: 0,\n  borderTop: \"1px solid white\",\n  height: \"60px\",\n  alignItems: \"center\",\n  display: \"flex\",\n  position: \"relative\",\n\n  flexDirection: \"row-reverse\",\n});\n\nexport const SectionLabel = styled(LabelInput)(\n  ({ backgroundColor }: { backgroundColor: string }) => ({\n    textAlign: \"right\",\n    borderRadius: 0,\n\n    color: \"white\",\n    backgroundColor: backgroundColor,\n  })\n);\n\nexport const SectionSumValue = styled(ValueInput)(\n  ({ backgroundColor }: { backgroundColor: string }) => ({\n    borderRadius: 0,\n\n    color: \"white\",\n    backgroundColor: backgroundColor,\n  })\n);\n\nconst useStyles = makeStyles(() => ({\n  input: {\n    textAlign: \"right\",\n    fontFamily: \"'Varela Round', sans-serif\",\n    fontSize: \"20px\",\n    fontWeight: 600,\n  },\n}));\n\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface SectionTitleProps {\n  title: string;\n  currentSort: SortType;\n  setSortType: (sort: SortType) => void;\n  transactions: Transaction[];\n  total: number;\n  months: number[];\n  color: string;\n  expandable?: boolean;\n  onExpand: () => void;\n  expanded: boolean;\n  categories: string[];\n  isBalance?: boolean;\n}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\nexport const SectionSumUp = ({ ...props }: SectionTitleProps) => {\n  const classes = useStyles();\n\n  /*const sort = () => {\n    if (props.currentSort === SortType.ASC) {\n      props.setSortType(SortType.DESC);\n    } else {\n      props.setSortType(SortType.ASC);\n    }\n  };*/\n\n  const getValue = (month) => {\n    return MoneyUtil.numberWithCommas(\n      !props.isBalance\n        ? TransactionHelper.sumTransactions(\n            TransactionHelper.getTransactionOfMonth(props.transactions, month)\n          )\n        : TransactionHelper.getMonthBalance(props.transactions, month)\n    );\n  };\n\n  const getExpandIcon = () => {\n    return props.expandable !== false ? (\n      <ExpandSection>\n        {!props.expanded ? (\n          <IconButton\n            disabled={props.categories.length === 0}\n            style={{\n              opacity: 1,\n            }}\n            onClick={() => {\n              props.onExpand();\n            }}\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        ) : (\n          <IconButton\n            disabled={props.categories.length === 0}\n            style={{\n              opacity: 1,\n            }}\n            onClick={() => {\n              props.onExpand();\n            }}\n          >\n            <ExpandLessIcon />\n          </IconButton>\n        )}\n      </ExpandSection>\n    ) : (\n      <span></span>\n    );\n  };\n\n  return (\n    <SectionTitleView>\n      <SectionLabel\n        dir=\"rtl\"\n        value={props.title}\n        backgroundColor={props.color}\n        startAdornment={\n          <IconButton style={{ opacity: 0 }}>\n            <WorkIcon />\n          </IconButton>\n        }\n        endAdornment={getExpandIcon()}\n        inputProps={{ className: classes.input }}\n      />\n\n      {props.months.map((month) => (\n        <SectionSumValue\n          backgroundColor={props.color}\n          dir=\"rtl\"\n          value={getValue(month)}\n          startAdornment={<ShekelSymbol value={getValue(month)} />}\n          inputProps={{ className: classes.input }}\n        />\n      ))}\n    </SectionTitleView>\n  );\n};\n","import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Transaction } from \"../../../../model/transaction\";\nimport {\n  LabelInput,\n  RowContainer,\n  ValueInput,\n} from \"../../../common/transactionRow\";\nimport { TransactionHelper } from \"../../../../util/transactionHelper\";\nimport { ShekelSymbol } from \"../../../common/shekelSymbol\";\nimport { MoneyUtil } from \"../../../../util/MoneyUtil\";\nimport _ from \"lodash\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\n//region [[ Styles ]]\n\nconst TransactionCellView = styled(Paper)(\n  ({ isLabel }: { isLabel: boolean }) => ({\n    display: \"flex\",\n    flexDirection: \"column\",\n    flex: isLabel ? \"none\" : 1,\n  })\n);\n\nexport const TransactionLabel = styled(LabelInput)(\n  ({ backgroundColor }: { backgroundColor: string }) => ({\n    backgroundColor: backgroundColor,\n    textAlign: \"right\",\n    borderRadius: 0,\n    height: \"45px\",\n  })\n);\n\nexport const TransactionCellInput = styled(ValueInput)(\n  ({ backgroundColor }: { backgroundColor: string }) => ({\n    backgroundColor: backgroundColor,\n    borderRadius: 0,\n    height: \"45px\",\n  })\n);\n\nconst useStyles = makeStyles(() => ({\n  input: {\n    textAlign: \"right\",\n    width: \"240px\",\n    fontFamily: \"'Varela Round', sans-serif\",\n    fontSize: \"18px\",\n    fontWeight: 400,\n  },\n  input2: {\n    textAlign: \"right\",\n    fontFamily: \"'Varela Round', sans-serif\",\n    fontSize: \"20px\",\n    fontWeight: 400,\n  },\n}));\n\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface TransactionCellProps {\n  transactions: Transaction[];\n  total?: boolean;\n  showLabel: boolean;\n  showValue: boolean;\n  type: string;\n}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\nexport const TransactionCell = ({ ...props }: TransactionCellProps) => {\n  const classes = useStyles();\n\n  const [transactionName, setTransactionName] = useState(\n    props.transactions.length > 0 ? props.transactions[0].name : \"\"\n  );\n  const [transactionValue, setTransactionValue] = useState(\n    props.transactions.length > 0\n      ? _.sum(props.transactions.map((t) => t.value))\n      : 0\n  );\n  const [expanded] = useState(false);\n\n  useEffect(() => {\n    setTransactionName(\n      props.transactions.length > 0 ? props.transactions[0].name : \"\"\n    );\n    setTransactionValue(\n      props.transactions.length > 0\n        ? _.sum(props.transactions.map((t) => t.value))\n        : 0\n    );\n  }, [props.transactions, props.total]);\n\n  const handleFocus = (event) => {\n    event.target.select();\n  };\n\n  const getTransactionIcon = () => {\n    return (\n      <IconButton style={{ opacity: props.total ? 0 : 0.5 }}>\n        <i className={TransactionHelper.getIcon(props.type).iconName}></i>\n      </IconButton>\n    );\n  };\n\n  const getTransactionValue = () => {\n    return !expanded\n      ? transactionValue === 0\n        ? \"\"\n        : MoneyUtil.numberWithCommas(transactionValue)\n      : totalValue;\n  };\n\n  const totalValue = 0;\n\n  return (\n    <TransactionCellView isLabel={props.showLabel}>\n      <RowContainer>\n        {props.showLabel && (\n          <TransactionLabel\n            dir=\"rtl\"\n            value={props.total ? \"סה״כ\" : transactionName}\n            startAdornment={getTransactionIcon()}\n            readOnly\n            onFocus={handleFocus}\n            backgroundColor={props.total ? \"aquamarine\" : \"#f3f3f3\"}\n            onChange={(event) => {\n              setTransactionName(event.target.value);\n            }}\n            inputProps={{ className: classes.input }}\n          />\n        )}\n        {!expanded && props.showValue === true && (\n          <TransactionCellInput\n            dir=\"rtl\"\n            contentEditable={false}\n            onFocus={handleFocus}\n            readOnly\n            value={getTransactionValue()}\n            backgroundColor={props.total ? \"aquamarine\" : \"#e7e7e7\"}\n            onChange={(event) => {\n              setTransactionValue(parseFloat(event.target.value));\n            }}\n            startAdornment={<ShekelSymbol value={transactionValue} />}\n            inputProps={{ className: classes.input2 }}\n          />\n        )}\n      </RowContainer>\n    </TransactionCellView>\n  );\n};\n","import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport WorkIcon from \"@material-ui/icons/Work\";\n\nimport {\n  ExpandSection,\n  LabelInput,\n  RowContainer,\n  ValueInput,\n} from \"../../common/transactionRow\";\nimport _ from \"lodash\";\nimport { TransactionCell } from \"./transaction/transactionCell\";\nimport { TransactionHelper } from \"../../../util/transactionHelper\";\nimport { ShekelSymbol } from \"../../common/shekelSymbol\";\nimport { MoneyUtil } from \"../../../util/MoneyUtil\";\nimport { Transaction } from \"../../../model/transaction\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\n//region [[ Styles ]]\n\nconst CategoryView = styled(Paper)({\n  display: \"flex\",\n  flexDirection: \"column\",\n});\n\nconst ChildrenContainer = styled(\"div\")({\n  display: \"flex\",\n  flexDirection: \"column\",\n});\n\nconst TransactionRow = styled(\"div\")({\n  display: \"flex\",\n  flexDirection: \"row-reverse\",\n});\n\nexport const CategoryLabel = styled(LabelInput)(\n  ({ backgroundColor }: { backgroundColor: string }) => ({\n    backgroundColor: backgroundColor,\n    textAlign: \"right\",\n\n    borderRadius: 0,\n  })\n);\n\nexport const CategoryCell = styled(ValueInput)(\n  ({ backgroundColor }: { backgroundColor: string }) => ({\n    backgroundColor: backgroundColor,\n    borderRadius: 0,\n    fontWeight: 500,\n  })\n);\n\nconst useStyles = makeStyles(() => ({\n  input: {\n    textAlign: \"right\",\n    width: \"240px\",\n    fontFamily: \"'Varela Round', sans-serif\",\n    fontSize: \"20px\",\n    fontWeight: 400,\n  },\n  input2: {\n    textAlign: \"right\",\n    fontFamily: \"'Varela Round', sans-serif\",\n    fontSize: \"20px\",\n    fontWeight: 400,\n  },\n}));\n\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface CategoryProps {\n  transactions: Transaction[];\n  type: string;\n  color: string;\n  showLabel: boolean;\n  months: number[];\n  total?: number;\n}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\nexport const Category = ({ ...props }: CategoryProps) => {\n  const [expanded, setExpanded] = useState(false);\n  const [total, setTotal] = useState(props.total ? props.total : 0);\n\n  const [uniqueTransactions, setUniqueTransactions] = useState<string[]>([]);\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (!props.total) {\n      setTotal(\n        _.sum(\n          props.transactions.map((transaction) => {\n            if (transaction.debit) {\n              return parseInt(transaction.debit!);\n            } else {\n              return parseInt(transaction.credit!);\n            }\n          })\n        )\n      );\n    }\n\n    setUniqueTransactions(_.uniq(props.transactions.map((t) => t.name)));\n  }, [props.transactions, props.type]);\n\n  const handleFocus = (event) => {\n    event.target.select();\n  };\n\n  const getCategorySum = (month) => {\n    return MoneyUtil.numberWithCommas(\n      TransactionHelper.sumTransactions(\n        TransactionHelper.getTransactionOfMonth(props.transactions, month)\n      )\n    );\n  };\n\n  const getCategoryIcon = () => {\n    return (\n      <IconButton style={{ opacity: props.total ? 0 : 0.5 }}>\n        <i className={TransactionHelper.getIcon(props.type).iconName}></i>\n      </IconButton>\n    );\n  };\n\n  const getExpandIcon = () => {\n    return (\n      <ExpandSection>\n        {!expanded ? (\n          <IconButton\n            disabled={props.transactions.length === 0}\n            style={{\n              opacity: props.transactions.length > 0 ? 1 : 0,\n            }}\n            onClick={() => {\n              setExpanded(!expanded);\n            }}\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        ) : (\n          <IconButton\n            disabled={props.transactions.length === 0}\n            style={{\n              opacity: props.transactions.length > 0 ? 1 : 0,\n            }}\n            onClick={() => {\n              setExpanded(!expanded);\n            }}\n          >\n            <ExpandLessIcon />\n          </IconButton>\n        )}\n      </ExpandSection>\n    );\n  };\n\n  return (\n    <CategoryView>\n      <RowContainer>\n        {props.showLabel && (\n          <CategoryLabel\n            dir=\"rtl\"\n            value={props.type}\n            startAdornment={getCategoryIcon()}\n            onFocus={handleFocus}\n            endAdornment={getExpandIcon()}\n            backgroundColor={props.color}\n            inputProps={{ className: classes.input }}\n          />\n        )}\n        {props.months.map((month) => (\n          <CategoryCell\n            dir=\"rtl\"\n            onFocus={handleFocus}\n            readOnly\n            value={getCategorySum(month)}\n            backgroundColor={props.color}\n            startAdornment={<ShekelSymbol value={getCategorySum(month)} />}\n            inputProps={{ className: classes.input2 }}\n          />\n        ))}\n      </RowContainer>\n      <ChildrenContainer>\n        {expanded &&\n          uniqueTransactions.map((name) => {\n            const unique = props.transactions.filter((t) => t.name === name);\n\n            return (\n              <TransactionRow>\n                {props.months.map((month, index) => {\n                  const uniquePerMonth = unique.filter(\n                    (t) => (t.date as any).getMonth() === month\n                  );\n\n                  return (\n                    <>\n                      {index === 0 && (\n                        <TransactionCell\n                          type={props.type}\n                          transactions={\n                            uniquePerMonth.length > 0\n                              ? uniquePerMonth\n                              : [\n                                  {\n                                    name: name,\n                                    value: 0,\n                                    type: \"income\",\n                                    subTransactions: [],\n                                  },\n                                ]\n                          }\n                          showLabel={true}\n                          showValue={false}\n                        />\n                      )}\n\n                      <TransactionCell\n                        type={props.type}\n                        transactions={\n                          uniquePerMonth.length > 0\n                            ? uniquePerMonth\n                            : [\n                                {\n                                  name: name,\n                                  value: 0,\n                                  type: \"income\",\n                                  subTransactions: [],\n                                },\n                              ]\n                        }\n                        showLabel={false}\n                        showValue={true}\n                      />\n                    </>\n                  );\n                })}\n              </TransactionRow>\n            );\n          })}\n      </ChildrenContainer>\n    </CategoryView>\n  );\n};\n","import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { SectionSumUp } from \"./sectionSumUp\";\nimport { SortType, Transaction } from \"../../model/transaction\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport _ from \"lodash\";\nimport { Category } from \"./category/category\";\nimport { TransactionHelper } from \"../../util/transactionHelper\";\n\n//region [[ Styles ]]\n\nconst SectionView = styled(\"div\")({\n  marginBottom: \"20px\",\n  width: \"100%\",\n  position: \"relative\",\n});\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface SectionComponentProps {\n  transactions: Transaction[];\n  categories: string[];\n  title: string;\n  primaryColor: string;\n  secondaryColor: string;\n  showLabel: boolean;\n  months: number[];\n  expandable?: boolean;\n  isBalance?: boolean;\n}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\nexport const Section = ({ ...props }: SectionComponentProps) => {\n  const [transactions, setTransactions] = useState(props.transactions);\n  const [currentSort, setCurrentSort] = useState(SortType.DESC);\n  const [total, setTotal] = useState(0);\n\n  const [expanded, setExpanded] = useState(false);\n\n  useEffect(() => {\n    setTransactions(\n      _.orderBy(\n        props.transactions,\n        [\"value\"],\n        [currentSort === SortType.ASC ? \"asc\" : \"desc\"]\n      ).slice()\n    );\n\n    setTotal(\n      _.sum(\n        props.transactions.map((transaction) => {\n          if (transaction.debit) {\n            return parseInt(transaction.debit!);\n          } else {\n            return parseInt(transaction.credit!);\n          }\n        })\n      )\n    );\n  }, [currentSort, props.transactions, props.categories]);\n\n  const setSortType = (sortType: SortType) => {\n    setCurrentSort(sortType);\n  };\n\n  return (\n    <SectionView>\n      <SectionSumUp\n        title={props.title}\n        setSortType={setSortType}\n        transactions={!expanded ? props.transactions : []}\n        months={props.months}\n        currentSort={currentSort}\n        onExpand={() => {\n          setExpanded(!expanded);\n        }}\n        expandable={props.expandable}\n        total={total}\n        categories={props.categories}\n        expanded={expanded}\n        isBalance={props.isBalance}\n        color={props.primaryColor}\n      />\n\n      {expanded &&\n        props.categories.map((category) => {\n          const categoryTransactions = props.transactions.filter(\n            (transaction) =>\n              TransactionHelper.getType(transaction.name) === category\n          );\n\n          return categoryTransactions.length > 0 ? (\n            <Category\n              months={props.months}\n              transactions={categoryTransactions}\n              color={props.secondaryColor}\n              showLabel={props.showLabel}\n              type={category}\n            />\n          ) : (\n            <></>\n          );\n        })}\n\n      {expanded && (\n        <SectionSumUp\n          title={\"סך הכל\"}\n          setSortType={setSortType}\n          transactions={props.transactions}\n          months={props.months}\n          currentSort={currentSort}\n          onExpand={() => {\n            setExpanded(!expanded);\n          }}\n          expandable={props.expandable}\n          total={total}\n          categories={props.categories}\n          expanded={expanded}\n          isBalance={props.isBalance}\n          color={props.primaryColor}\n        />\n      )}\n    </SectionView>\n  );\n};\n","import * as React from \"react\";\nimport { useEffect } from \"react\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport { Section } from \"../section/section\";\nimport { Transaction } from \"../../model/transaction\";\nimport { monthNames, TitleWidth } from \"../common/transactionRow\";\nimport { IconButton } from \"@material-ui/core\";\n\n//region [[ Styles ]]\nconst CashFlowView = styled((props) => <div {...props} />)({\n  width: \"100%\",\n});\n\nconst MonthTitle = styled((props) => <div {...props} />)({\n  color: \"grey\",\n  fontFamily: \"'Varela Round', sans-serif\",\n  textAlign: \"center\",\n  fontWeight: 500,\n  fontSize: \"22px\",\n});\n\nconst MonthName = styled((props) => <div {...props} />)({\n  color: \"grey\",\n  fontSize: \"14px\",\n  fontFamily: \"'Varela Round', sans-serif\",\n  textAlign: \"center\",\n});\n\nconst SingleMonthTitle = styled((props) => <div {...props} />)({\n  display: \"flex\",\n  justifyContent: \"center\",\n  flex: 1,\n  fontFamily: \"'Varela Round', sans-serif\",\n  flexDirection: \"column\",\n  width: TitleWidth + \"px\",\n});\n\nconst MonthsContainers = styled((props) => <div {...props} />)({\n  display: \"flex\",\n  width: \"100%\",\n  marginTop: \"15px\",\n  marginRight: TitleWidth + \"px\",\n  justifyContent: \"flex-end\",\n  flexDirection: \"row-reverse\",\n});\n\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface MonthComponentProps {\n  transactions: Transaction[];\n  categories: string[];\n  month: string;\n  showLabel: boolean;\n  months: number[];\n}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\nexport const CashFlow = ({ ...props }: MonthComponentProps) => {\n  useEffect(() => {}, [props.months]);\n\n  return (\n    <CashFlowView>\n      <header\n        className=\"App-header\"\n        style={{ justifyContent: \"start\", alignItems: \"end\" }}\n      >\n        {props.transactions.length > 0 && (\n          <>\n            <MonthsContainers>\n              <SingleMonthTitle\n                style={{ width: TitleWidth + \"px\", flex: \"none\" }}\n              />\n\n              {props.months.map((month) => (\n                <SingleMonthTitle>\n                  <MonthName>{month}</MonthName>\n                  <IconButton>\n                    <MonthTitle>{monthNames[month - 1]}</MonthTitle>\n                  </IconButton>\n                </SingleMonthTitle>\n              ))}\n            </MonthsContainers>\n\n            <Section\n              title={\"הכנסות\"}\n              categories={props.categories}\n              primaryColor={\"#3a7ab9\"}\n              secondaryColor={\"#b1c9f2\"}\n              transactions={props.transactions.filter((t) => t.credit)}\n              showLabel={props.showLabel}\n              months={props.months}\n            />\n            <Section\n              title={\"הוצאות\"}\n              categories={props.categories}\n              primaryColor={\"#FF6666\"}\n              secondaryColor={\"#ecc2bd\"}\n              transactions={props.transactions.filter((t) => t.debit)}\n              showLabel={props.showLabel}\n              months={props.months}\n            />\n\n            <Section\n              title={\"יתרה סוף חודש\"}\n              isBalance={true}\n              categories={props.categories}\n              primaryColor={\"#3399FF\"}\n              secondaryColor={\"#CCE5FF\"}\n              transactions={props.transactions.filter(\n                (t) => t.debit || t.credit\n              )}\n              expandable={false}\n              showLabel={props.showLabel}\n              months={props.months}\n            />\n          </>\n        )}\n      </header>\n    </CashFlowView>\n  );\n};\n","import * as React from \"react\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport { Paper } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { Transaction } from \"../../model/transaction\";\nimport { useEffect } from \"react\";\nimport { TransactionHelper } from \"../../util/transactionHelper\";\n\n//region [[ Styles ]]\n\nconst CategorizeTransactionsTableView = styled(\"div\")(({ theme }) => ({}));\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    overflowX: \"auto\",\n  },\n  table: {\n    minWidth: 550,\n  },\n});\n\nfunction createData(\n  name: string,\n  calories: number,\n  fat: number,\n  carbs: number,\n  protein: number\n) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n];\n\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface CategorizeTransactionsTableProps {\n  transactions: Transaction[];\n}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\nexport const CategorizeTransactionsTable = ({\n  ...props\n}: CategorizeTransactionsTableProps) => {\n  const classes = useStyles();\n\n  useEffect(() => {}, [props.transactions]);\n\n  const otherTransactions = props.transactions.filter(\n    (transaction) =>\n      transaction.name !== undefined &&\n      TransactionHelper.getType(transaction.name) === \"אחר\"\n  );\n\n  return (\n    <CategorizeTransactionsTableView>\n      <Paper className={classes.root}>\n        <Table className={classes.table} dir={\"rtl\"}>\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"right\" dir={\"rtl\"}>\n                שם\n              </TableCell>\n              <TableCell align=\"right\" dir={\"rtl\"}>\n                ערך\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {otherTransactions.map((transaction) => (\n              <TableRow key={transaction.name}>\n                <TableCell align=\"right\">{transaction.name}</TableCell>\n                <TableCell align=\"right\">{transaction.value}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    </CategorizeTransactionsTableView>\n  );\n};\n","import * as React from \"react\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport { Dialog } from \"@material-ui/core\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport { useEffect } from \"react\";\nimport { CategorizeTransactionsTable } from \"./categorizeTransactionsTable\";\nimport { Transaction } from \"../../model/transaction\";\nimport transitions from \"@material-ui/core/styles/transitions\";\n\n//region [[ Styles ]]\n\nconst SelectCategoryDialogView = styled(\"div\")(({ theme }) => ({}));\n\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface SelectCategoryDialogProps {\n  open: boolean;\n  transactions: Transaction[];\n}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\nexport const SelectCategoryDialog = ({\n  ...props\n}: SelectCategoryDialogProps) => {\n  const [open, setOpen] = React.useState(props.open);\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    setOpen(props.open);\n  }, [props.open]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <SelectCategoryDialogView>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle dir={\"rtl\"}>{\"מיון פעולות\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText dir={\"rtl\"}>\n            {\"אלו פעולות שלא זוהו\"}\n          </DialogContentText>\n          <CategorizeTransactionsTable transactions={props.transactions} />\n        </DialogContent>\n        <DialogActions dir={\"rtl\"}>\n          <Button\n            onClick={handleClose}\n            color=\"primary\"\n            variant={\"contained\"}\n            autoFocus\n          >\n            סיים\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            דלג\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </SelectCategoryDialogView>\n  );\n};\n","import * as React from \"react\";\n\nexport interface TimeframeContext {\n  startMonth: number;\n  timeframe: number;\n  setCurrentTimeframe: (timeframe: number) => void;\n  setCurrentStartMonth: (startMonth: number) => void;\n}\n\nconst TIMEFRAME_DEFAULT_VALUE = {\n  startMonth: 0,\n  timeframe: 6,\n  setCurrentTimeframe: () => {},\n  setCurrentStartMonth: () => {},\n};\n\nexport const timeframeContext = React.createContext<TimeframeContext>(\n  TIMEFRAME_DEFAULT_VALUE\n);\n","import * as React from \"react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Transaction } from \"../../../model/transaction\";\nimport Button from \"@material-ui/core/Button\";\nimport { ExcelUtil } from \"../../../util/excelUtil\";\nimport _ from \"lodash\";\nimport { TransactionHelper } from \"../../../util/transactionHelper\";\nimport { CashFlow } from \"../../cashFlow/cashFlow\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport { SelectCategoryDialog } from \"../../dialog/selectCategoryDialog\";\nimport { useTimeframe } from \"../../context/useTimeframe\";\nimport { timeframeContext } from \"../../context/timeframeContext\";\n\n//region [[ Styles ]]\nconst Timeline = styled((props) => <div {...props} />)({\n  display: \"flex\",\n  justifyContent: \"center\",\n});\n\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface CashflowProps {}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\nexport const BankAccountTimeline = ({ ...props }: CashflowProps) => {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [categories, setCategories] = useState<string[]>([]);\n  const [monthTimeframe, setMonthsTimeframe] = useState<number[]>([]);\n\n  const { startMonth, timeframe } = useContext(timeframeContext);\n\n  const [selectCategoryDialogOpen, setSelectCategoryDialogOpen] = useState<\n    boolean\n  >(false);\n\n  useEffect(() => {\n    let months: number[] = [];\n    for (let i = startMonth; i < timeframe + startMonth; i++) {\n      months.push(i + 1);\n    }\n    setMonthsTimeframe(months);\n  }, [timeframe, startMonth]);\n\n  const handleResult = (resp) => {\n    const cats = _.uniq(\n      resp.map((transaction) => TransactionHelper.getType(transaction.name))\n    );\n\n    //setSelectCategoryDialogOpen(true);\n    setCategories(cats);\n    setTransactions(resp);\n  };\n  console.log(\"Gg\");\n\n  const filterTransactions = TransactionHelper.getTransactionsByTimeframe(\n    transactions,\n    startMonth,\n    timeframe\n  );\n\n  return (\n    <div className=\"App\">\n      <input\n        accept=\"*\"\n        style={{ display: \"none\" }}\n        id=\"raised-button-file\"\n        multiple\n        type=\"file\"\n        onChange={(event) => {\n          ExcelUtil.readFile(event, handleResult);\n        }}\n      />\n      {transactions.length === 0 && (\n        <label htmlFor=\"raised-button-file\">\n          <Button variant=\"contained\" component=\"span\">\n            Upload\n          </Button>\n        </label>\n      )}\n\n      <SelectCategoryDialog\n        open={selectCategoryDialogOpen}\n        transactions={transactions}\n      />\n\n      <Timeline>\n        <CashFlow\n          month={\"מרץ\"}\n          months={monthTimeframe}\n          categories={categories}\n          transactions={filterTransactions}\n          showLabel={true}\n        />\n      </Timeline>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { useContext, useEffect } from \"react\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { useTimeframe } from \"../context/useTimeframe\";\nimport { timeframeContext } from \"../context/timeframeContext\";\n\n//region [[ Styles ]]\n\nconst MainToolbarView = styled((props) => <div {...props} />)({\n  height: \"80px\",\n  borderBottom: \"1px solid #ebebeb\",\n  width: \"100%\",\n  display: \"flex\",\n  flexDirection: \"row-reverse\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n});\n\nconst AccountLogo = styled(Paper)({\n  height: \"60px\",\n  backgroundColor: \"#CCE5FF\",\n  width: \"60px\",\n\n  marginLeft: \"10px\",\n});\n\nconst AccountNameContainer = styled(\"div\")({});\n\nconst AccountName = styled(\"div\")({\n  fontWeight: 600,\n  fontSize: \"20px\",\n});\n\nconst RightSection = styled(\"div\")({\n  display: \"flex\",\n  marginRight: \"10px\",\n  flexDirection: \"row-reverse\",\n});\n\nconst LeftSection = styled(\"div\")({\n  marginLeft: \"10px\",\n});\n\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface MainToolbarProps {}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\nexport const MainToolbar = ({ ...props }: MainToolbarProps) => {\n  const {\n    timeframe,\n    startMonth,\n    setCurrentStartMonth,\n    setCurrentTimeframe,\n  } = useContext(timeframeContext);\n\n  useEffect(() => {}, [startMonth, timeframe]);\n\n  const onChangeTimeframe = (event) => {\n    setCurrentTimeframe(event.target.value);\n  };\n\n  return (\n    <MainToolbarView>\n      <RightSection>\n        <AccountLogo></AccountLogo>\n        <AccountNameContainer>\n          <AccountName>בנק לאומי</AccountName>\n        </AccountNameContainer>\n      </RightSection>\n\n      <LeftSection>\n        <IconButton>\n          <ArrowBackIosIcon\n            onClick={() => {\n              if (startMonth + timeframe + 1 <= 12) {\n                setCurrentStartMonth(startMonth + 1);\n              }\n            }}\n          />\n        </IconButton>\n\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          value={timeframe}\n          onChange={onChangeTimeframe}\n          label=\"Age\"\n        >\n          <MenuItem aria-label=\"None\" value=\"\" />\n          <MenuItem value={1}>חודש</MenuItem>\n          <MenuItem value={2}>חודשיים</MenuItem>\n          <MenuItem value={3}>שלושה חודשים</MenuItem>\n          <MenuItem value={6}>חצי שנה</MenuItem>\n          <MenuItem value={12}>שנה</MenuItem>\n        </Select>\n        <IconButton\n          onClick={() => {\n            if (startMonth - 1 >= 0) {\n              setCurrentStartMonth(startMonth - 1);\n            }\n          }}\n        >\n          <ArrowForwardIosIcon />\n        </IconButton>\n      </LeftSection>\n    </MainToolbarView>\n  );\n};\n","import * as React from \"react\";\nimport { withStyles } from \"@material-ui/core\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport { BankAccountTimeline } from \"../bankAccount/bankAccountTimeline\";\nimport { MainToolbar } from \"../../toolbars/mainToolbar\";\nimport { useState } from \"react\";\nimport { useTimeframe } from \"../../context/useTimeframe\";\nimport { timeframeContext } from \"../../context/timeframeContext\";\n\n//region [[ Styles ]]\n\nconst HomePageView = styled((props) => <div {...props} />)({\n  width: \"100%\",\n});\n\n//endregion [[ Styles ]]\n\n//region [[ Props ]]\n\nexport interface HomePageProps {}\n\n//endregion [[ Props ]]\n\n//region [[ Functions ]]\n//endregion [[ Functions ]]\n\nexport const HomePage = ({ ...props }: HomePageProps) => {\n  const timeframe = useTimeframe();\n\n  return (\n    <HomePageView>\n      <timeframeContext.Provider value={timeframe}>\n        <MainToolbar />\n\n        <BankAccountTimeline />\n      </timeframeContext.Provider>\n    </HomePageView>\n  );\n};\n","import React, { useCallback, useState } from \"react\";\nimport { TimeframeContext } from \"./timeframeContext\";\n\nexport const useTimeframe = (): any => {\n  const [startMonth, setStartMonth] = useState(0);\n  const [timeframe, setTimeframe] = useState(6);\n\n  const setCurrentStartMonth = useCallback(\n    (currentStartMonth: number): void => {\n      setStartMonth(currentStartMonth);\n    },\n    []\n  );\n\n  const setCurrentTimeframe = useCallback((currentTimeframe: number): void => {\n    setTimeframe(currentTimeframe);\n  }, []);\n\n  return { startMonth, timeframe, setCurrentStartMonth, setCurrentTimeframe };\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Navigation from \"./components/pages/navigation/navigation\";\nimport { SignInPage } from \"./components/pages/signin/signInPage\";\nimport * as ROUTES from \"./constants/routes\";\nimport SignUpPage from \"./components/pages/signup/signUpPage\";\nimport { createBrowserHistory } from \"history\";\nimport { withAuthentication } from \"./components/Session\";\nimport { HomePage } from \"./components/pages/homePage/homePage\";\n\n//region [[ Props ]]\n\nexport interface AppProps {}\n\n//endregion [[ Props ]]\n\nconst historyGlobal = createBrowserHistory({ forceRefresh: true });\n\nexport const App = ({ ...props }: AppProps) => {\n  return (\n    <>\n      <Router history={historyGlobal}>\n        <div>\n          <Navigation history={historyGlobal} />\n\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={\"/\"} component={HomePage} />\n\n          {/*\n\n\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />*/}\n        </div>\n      </Router>\n    </>\n  );\n};\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Firebase, { FirebaseContext } from \"./components/Firebase\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}